import{SafeSubscriber,Subscriber}from"./Subscriber";import{isSubscription}from"./Subscription";import{observable as Symbol_observable}from"./symbol/observable";import{pipeFromArray}from"./util/pipe";import{config}from"./config";import{isFunction}from"./util/isFunction";import{errorContext}from"./util/errorContext";var Observable=(()=>{function e(r){r&&(this._subscribe=r)}return e.prototype.lift=function(r){var t=new e;return t.source=this,t.operator=r,t},e.prototype.subscribe=function(r,t,e){var o=this,i=isSubscriber(r)?r:new SafeSubscriber(r,t,e);return errorContext(function(){var r=o.operator,t=o.source;i.add(r?r.call(i,t):t?o._subscribe(i):o._trySubscribe(i))}),i},e.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(r){t.error(r)}},e.prototype.forEach=function(o,r){var i=this;return new(r=getPromiseCtor(r))(function(r,t){var e=new SafeSubscriber({next:function(r){try{o(r)}catch(r){t(r),e.unsubscribe()}},error:t,complete:r});i.subscribe(e)})},e.prototype._subscribe=function(r){var t;return null==(t=this.source)?void 0:t.subscribe(r)},e.prototype[Symbol_observable]=function(){return this},e.prototype.pipe=function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return pipeFromArray(r)(this)},e.prototype.toPromise=function(r){var o=this;return new(r=getPromiseCtor(r))(function(r,t){var e;o.subscribe(function(r){return e=r},function(r){return t(r)},function(){return r(e)})})},e.create=function(r){return new e(r)},e})();function getPromiseCtor(r){return null!=(r=null!=r?r:config.Promise)?r:Promise}function isObserver(r){return r&&isFunction(r.next)&&isFunction(r.error)&&isFunction(r.complete)}function isSubscriber(r){return r&&r instanceof Subscriber||isObserver(r)&&isSubscription(r)}export{Observable};