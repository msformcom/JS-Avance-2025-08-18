import{EMPTY}from"./observable/empty";import{of}from"./observable/of";import{throwError}from"./observable/throwError";import{isFunction}from"./util/isFunction";(o=>{o.NEXT="N",o.ERROR="E",o.COMPLETE="C"})(NotificationKind=NotificationKind||{});var NotificationKind,Notification=(()=>{function t(o,t,i){this.kind=o,this.value=t,this.error=i,this.hasValue="N"===o}return t.prototype.observe=function(o){return observeNotification(this,o)},t.prototype.do=function(o,t,i){var r=this,n=r.kind,e=r.error;return"N"===n?null==o?void 0:o(r.value):"E"===n?null==t?void 0:t(e):null==i?void 0:i()},t.prototype.accept=function(o,t,i){var r;return isFunction(null==(r=o)?void 0:r.next)?this.observe(o):this.do(o,t,i)},t.prototype.toObservable=function(){var o=this,t=o.kind,i=o.error,o="N"===t?of(o.value):"E"===t?throwError(function(){return i}):"C"===t?EMPTY:0;if(o)return o;throw new TypeError("Unexpected notification kind "+t)},t.createNext=function(o){return new t("N",o)},t.createError=function(o){return new t("E",void 0,o)},t.createComplete=function(){return t.completeNotification},t.completeNotification=new t("C"),t})();function observeNotification(o,t){var i,r=o.kind,n=o.value,o=o.error;if("string"!=typeof r)throw new TypeError('Invalid notification, missing "kind"');"N"===r?null!=(i=t.next)&&i.call(t,n):"E"===r?null!=(i=t.error)&&i.call(t,o):null!=(n=t.complete)&&n.call(t)}export{NotificationKind,Notification,observeNotification};