import{__extends}from"tslib";import{Observable}from"../Observable";import{Subscription}from"../Subscription";import{refCount as higherOrderRefCount}from"../operators/refCount";import{createOperatorSubscriber}from"../operators/OperatorSubscriber";import{hasLift}from"../util/lift";var ConnectableObservable=(o=>{function t(t,e){var r=o.call(this)||this;return r.source=t,r.subjectFactory=e,r._subject=null,r._refCount=0,r._connection=null,hasLift(t)&&(r.lift=t.lift),r}return __extends(t,o),t.prototype._subscribe=function(t){return this.getSubject().subscribe(t)},t.prototype.getSubject=function(){var t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype._teardown=function(){this._refCount=0;var t=this._connection;(this._subject=this._connection=null)!=t&&t.unsubscribe()},t.prototype.connect=function(){var e,r=this,t=this._connection;return t||(t=this._connection=new Subscription,e=this.getSubject(),t.add(this.source.subscribe(createOperatorSubscriber(e,void 0,function(){r._teardown(),e.complete()},function(t){r._teardown(),e.error(t)},function(){return r._teardown()}))),t.closed&&(this._connection=null,t=Subscription.EMPTY)),t},t.prototype.refCount=function(){return higherOrderRefCount()(this)},t})(Observable);export{ConnectableObservable};