import{Observable}from"../Observable";import{iterator as Symbol_iterator}from"../symbol/iterator";import{isFunction}from"../util/isFunction";import{executeSchedule}from"../util/executeSchedule";function scheduleIterable(e,r){return new Observable(function(o){var u;return executeSchedule(o,r,function(){u=e[Symbol_iterator](),executeSchedule(o,r,function(){var e,r,t;try{r=(e=u.next()).value,t=e.done}catch(e){return void o.error(e)}t?o.complete():o.next(r)},0,!0)}),function(){return isFunction(null==u?void 0:u.return)&&u.return()}})}export{scheduleIterable};