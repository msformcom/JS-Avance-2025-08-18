import{__read}from"tslib";import{innerFrom}from"../observable/innerFrom";import{Observable}from"../Observable";import{mergeMap}from"../operators/mergeMap";import{isArrayLike}from"../util/isArrayLike";import{isFunction}from"../util/isFunction";import{mapOneOrManyArgs}from"../util/mapOneOrManyArgs";var nodeEventEmitterMethods=["addListener","removeListener"],eventTargetMethods=["addEventListener","removeEventListener"],jqueryMethods=["on","off"];function fromEvent(t,n,i,e){if(isFunction(i)&&(e=i,i=void 0),e)return fromEvent(t,n,i).pipe(mapOneOrManyArgs(e));var e=__read(isEventTarget(t)?eventTargetMethods.map(function(r){return function(e){return t[r](n,e,i)}}):isNodeStyleEventEmitter(t)?nodeEventEmitterMethods.map(toCommonHandlerRegistry(t,n)):isJQueryStyleEventEmitter(t)?jqueryMethods.map(toCommonHandlerRegistry(t,n)):[],2),r=e[0],o=e[1];if(!r&&isArrayLike(t))return mergeMap(function(e){return fromEvent(e,n,i)})(innerFrom(t));if(r)return new Observable(function(t){function e(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return t.next(1<e.length?e:e[0])}return r(e),function(){return o(e)}});throw new TypeError("Invalid event target")}function toCommonHandlerRegistry(t,n){return function(r){return function(e){return t[r](n,e)}}}function isNodeStyleEventEmitter(e){return isFunction(e.addListener)&&isFunction(e.removeListener)}function isJQueryStyleEventEmitter(e){return isFunction(e.on)&&isFunction(e.off)}function isEventTarget(e){return isFunction(e.addEventListener)&&isFunction(e.removeEventListener)}export{fromEvent};