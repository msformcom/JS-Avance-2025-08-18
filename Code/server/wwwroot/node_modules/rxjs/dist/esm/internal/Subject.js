import{Observable}from"./Observable";import{Subscription,EMPTY_SUBSCRIPTION}from"./Subscription";import{ObjectUnsubscribedError}from"./util/ObjectUnsubscribedError";import{arrRemove}from"./util/arrRemove";import{errorContext}from"./util/errorContext";class Subject extends Observable{constructor(){super(),this.closed=!1,this.currentObservers=null,this.observers=[],this.isStopped=!1,this.hasError=!1,this.thrownError=null}lift(r){var e=new AnonymousSubject(this,this);return e.operator=r,e}_throwIfClosed(){if(this.closed)throw new ObjectUnsubscribedError}next(e){errorContext(()=>{if(this._throwIfClosed(),!this.isStopped){this.currentObservers||(this.currentObservers=Array.from(this.observers));for(var r of this.currentObservers)r.next(e)}})}error(e){errorContext(()=>{if(this._throwIfClosed(),!this.isStopped){this.hasError=this.isStopped=!0,this.thrownError=e;for(var r=this.observers;r.length;)r.shift().error(e)}})}complete(){errorContext(()=>{if(this._throwIfClosed(),!this.isStopped){this.isStopped=!0;for(var r=this.observers;r.length;)r.shift().complete()}})}unsubscribe(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null}get observed(){var r;return 0<(null==(r=this.observers)?void 0:r.length)}_trySubscribe(r){return this._throwIfClosed(),super._trySubscribe(r)}_subscribe(r){return this._throwIfClosed(),this._checkFinalizedStatuses(r),this._innerSubscribe(r)}_innerSubscribe(r){let{hasError:e,isStopped:s,observers:t}=this;return e||s?EMPTY_SUBSCRIPTION:(this.currentObservers=null,t.push(r),new Subscription(()=>{this.currentObservers=null,arrRemove(t,r)}))}_checkFinalizedStatuses(r){var{hasError:e,thrownError:s,isStopped:t}=this;e?r.error(s):t&&r.complete()}asObservable(){var r=new Observable;return r.source=this,r}}Subject.create=(r,e)=>new AnonymousSubject(r,e);class AnonymousSubject extends Subject{constructor(r,e){super(),this.destination=r,this.source=e}next(r){var e,s;null!=(s=null==(e=this.destination)?void 0:e.next)&&s.call(e,r)}error(r){var e,s;null!=(s=null==(e=this.destination)?void 0:e.error)&&s.call(e,r)}complete(){var r,e;null!=(e=null==(r=this.destination)?void 0:r.complete)&&e.call(r)}_subscribe(r){var e;return null!=(e=null==(e=this.source)?void 0:e.subscribe(r))?e:EMPTY_SUBSCRIPTION}}export{Subject,AnonymousSubject};