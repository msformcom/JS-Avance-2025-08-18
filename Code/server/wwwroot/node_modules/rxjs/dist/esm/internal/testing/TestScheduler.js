import{Observable}from"../Observable";import{ColdObservable}from"./ColdObservable";import{HotObservable}from"./HotObservable";import{SubscriptionLog}from"./SubscriptionLog";import{VirtualTimeScheduler,VirtualAction}from"../scheduler/VirtualTimeScheduler";import{COMPLETE_NOTIFICATION,errorNotification,nextNotification}from"../NotificationFactories";import{dateTimestampProvider}from"../scheduler/dateTimestampProvider";import{performanceTimestampProvider}from"../scheduler/performanceTimestampProvider";import{animationFrameProvider}from"../scheduler/animationFrameProvider";import{immediateProvider}from"../scheduler/immediateProvider";import{intervalProvider}from"../scheduler/intervalProvider";import{timeoutProvider}from"../scheduler/timeoutProvider";let defaultMaxFrame=750;class TestScheduler extends VirtualTimeScheduler{constructor(e){super(VirtualAction,defaultMaxFrame),this.assertDeepEqual=e,this.hotObservables=[],this.coldObservables=[],this.flushTests=[],this.runMode=!1}createTime(e){e=(this.runMode?e.trim():e).indexOf("|");if(-1===e)throw new Error('marble diagram for time should have a completion marker "|"');return e*TestScheduler.frameTimeFactor}createColdObservable(e,r,t){if(-1!==e.indexOf("^"))throw new Error('cold observable cannot have subscription offset "^"');if(-1!==e.indexOf("!"))throw new Error('cold observable cannot have unsubscription marker "!"');e=TestScheduler.parseMarbles(e,r,t,void 0,this.runMode),r=new ColdObservable(e,this);return this.coldObservables.push(r),r}createHotObservable(e,r,t){if(-1!==e.indexOf("!"))throw new Error('hot observable cannot have unsubscription marker "!"');e=TestScheduler.parseMarbles(e,r,t,void 0,this.runMode),r=new HotObservable(e,this);return this.hotObservables.push(r),r}materializeInnerObservable(e,r){let t=[];return e.subscribe({next:e=>{t.push({frame:this.frame-r,notification:nextNotification(e)})},error:e=>{t.push({frame:this.frame-r,notification:errorNotification(e)})},complete:()=>{t.push({frame:this.frame-r,notification:COMPLETE_NOTIFICATION})}}),t}expectObservable(e,r=null){let t=[],i={actual:t,ready:!1};r=TestScheduler.parseMarblesAsSubscriptions(r,this.runMode);let a=r.subscribedFrame===1/0?0:r.subscribedFrame;r=r.unsubscribedFrame;let s,o=(this.schedule(()=>{s=e.subscribe({next:e=>{e=e instanceof Observable?this.materializeInnerObservable(e,this.frame):e;t.push({frame:this.frame,notification:nextNotification(e)})},error:e=>{t.push({frame:this.frame,notification:errorNotification(e)})},complete:()=>{t.push({frame:this.frame,notification:COMPLETE_NOTIFICATION})}})},a),r!==1/0&&this.schedule(()=>s.unsubscribe(),r),this.flushTests.push(i),this).runMode;return{toBe(e,r,t){i.ready=!0,i.expected=TestScheduler.parseMarbles(e,r,t,!0,o)},toEqual:e=>{i.ready=!0,i.expected=[],this.schedule(()=>{s=e.subscribe({next:e=>{e=e instanceof Observable?this.materializeInnerObservable(e,this.frame):e;i.expected.push({frame:this.frame,notification:nextNotification(e)})},error:e=>{i.expected.push({frame:this.frame,notification:errorNotification(e)})},complete:()=>{i.expected.push({frame:this.frame,notification:COMPLETE_NOTIFICATION})}})},a)}}}expectSubscriptions(e){let r={actual:e,ready:!1},t=(this.flushTests.push(r),this).runMode;return{toBe(e){e="string"==typeof e?[e]:e;r.ready=!0,r.expected=e.map(e=>TestScheduler.parseMarblesAsSubscriptions(e,t)).filter(e=>e.subscribedFrame!==1/0)}}}flush(){for(var e=this.hotObservables;0<e.length;)e.shift().setup();super.flush(),this.flushTests=this.flushTests.filter(e=>!e.ready||(this.assertDeepEqual(e.actual,e.expected),!1))}static parseMarblesAsSubscriptions(e,i=!1){if("string"!=typeof e)return new SubscriptionLog(1/0);var a=[...e],r=a.length;let s=-1,o=1/0,n=1/0,l=0;for(let t=0;t<r;t++){let r=l;var m=e=>{r+=e*this.frameTimeFactor},c=a[t];switch(c){case" ":i||m(1);break;case"-":m(1);break;case"(":s=l,m(1);break;case")":s=-1,m(1);break;case"^":if(o!==1/0)throw new Error("found a second subscription point '^' in a subscription marble diagram. There can only be one.");o=-1<s?s:l,m(1);break;case"!":if(n!==1/0)throw new Error("found a second unsubscription point '!' in a subscription marble diagram. There can only be one.");n=-1<s?s:l;break;default:if(i&&c.match(/^[0-9]$/)&&(0===t||" "===a[t-1])){var d=a.slice(t).join("").match(/^([0-9]+(?:\.[0-9]+)?)(ms|s|m) /);if(d){t+=d[0].length-1;var h=parseFloat(d[1]);let e;switch(d[2]){case"ms":e=h;break;case"s":e=1e3*h;break;case"m":e=1e3*h*60}m(e/this.frameTimeFactor);break}}throw new Error("there can only be '^' and '!' markers in a subscription marble diagram. Found instead '"+c+"'.")}l=r}return n<0?new SubscriptionLog(o):new SubscriptionLog(o,n)}static parseMarbles(e,r,i,t=!1,a=!1){if(-1!==e.indexOf("!"))throw new Error('conventional marble diagrams cannot have the unsubscription marker "!"');var s=[...e],o=s.length,n=[],e=(a?e.replace(/^[ ]+/,""):e).indexOf("^");let l=-1===e?0:e*-this.frameTimeFactor;var m="object"!=typeof r?e=>e:e=>t&&r[e]instanceof ColdObservable?r[e].messages:r[e];let c=-1;for(let t=0;t<o;t++){let r=l;var d=e=>{r+=e*this.frameTimeFactor};let e;var h=s[t];switch(h){case" ":a||d(1);break;case"-":d(1);break;case"(":c=l,d(1);break;case")":c=-1,d(1);break;case"|":e=COMPLETE_NOTIFICATION,d(1);break;case"^":d(1);break;case"#":e=errorNotification(i||"error"),d(1);break;default:if(a&&h.match(/^[0-9]$/)&&(0===t||" "===s[t-1])){var u=s.slice(t).join("").match(/^([0-9]+(?:\.[0-9]+)?)(ms|s|m) /);if(u){t+=u[0].length-1;var b=parseFloat(u[1]);let e;switch(u[2]){case"ms":e=b;break;case"s":e=1e3*b;break;case"m":e=1e3*b*60}d(e/this.frameTimeFactor);break}}e=nextNotification(m(h)),d(1)}e&&n.push({frame:-1<c?c:l,notification:e}),l=r}return n}createAnimator(){if(!this.runMode)throw new Error("animate() must only be used in run mode");let t=0,i;return{animate:e=>{if(i)throw new Error("animate() must not be called more than once within run()");if(/[|#]/.test(e))throw new Error("animate() must not complete or error");var r;i=new Map;for(r of TestScheduler.parseMarbles(e,void 0,void 0,void 0,!0))this.schedule(()=>{var e,r=this.now(),t=Array.from(i.values());i.clear();for(e of t)e(r)},r.frame)},delegate:{requestAnimationFrame(e){var r;if(i)return r=++t,i.set(r,e),r;throw new Error("animate() was not called within run()")},cancelAnimationFrame(e){if(!i)throw new Error("animate() was not called within run()");i.delete(e)}}}}createDelegates(){let i=0,s=new Map,o=()=>{let r=this.now();var e=Array.from(s.values()).filter(({due:e})=>e<=r),t=e.filter(({type:e})=>"immediate"===e);if(0<t.length)({handle:t,handler:a}=t[0]),s.delete(t),a();else{var t=e.filter(({type:e})=>"interval"===e);if(0<t.length)({duration:t,handler:i}=a=t[0]),a.due=r+t,a.subscription=this.schedule(o,t),i();else{var i,a=e.filter(({type:e})=>"timeout"===e);if(!(0<a.length))throw new Error("Expected a due immediate or interval");({handle:t,handler:i}=a[0]),s.delete(t),i()}}};return{immediate:{setImmediate:e=>{var r=++i;return s.set(r,{due:this.now(),duration:0,handle:r,handler:e,subscription:this.schedule(o,0),type:"immediate"}),r},clearImmediate:e=>{var r=s.get(e);r&&(r.subscription.unsubscribe(),s.delete(e))}},interval:{setInterval:(e,r=0)=>{var t=++i;return s.set(t,{due:this.now()+r,duration:r,handle:t,handler:e,subscription:this.schedule(o,r),type:"interval"}),t},clearInterval:e=>{var r=s.get(e);r&&(r.subscription.unsubscribe(),s.delete(e))}},timeout:{setTimeout:(e,r=0)=>{var t=++i;return s.set(t,{due:this.now()+r,duration:r,handle:t,handler:e,subscription:this.schedule(o,r),type:"timeout"}),t},clearTimeout:e=>{var r=s.get(e);r&&(r.subscription.unsubscribe(),s.delete(e))}}}}run(e){var r=TestScheduler.frameTimeFactor,t=this.maxFrames,i=(TestScheduler.frameTimeFactor=1,this.maxFrames=1/0,this.runMode=!0,this.createAnimator()),a=this.createDelegates(),a=(animationFrameProvider.delegate=i.delegate,dateTimestampProvider.delegate=this,immediateProvider.delegate=a.immediate,intervalProvider.delegate=a.interval,timeoutProvider.delegate=a.timeout,{cold:(performanceTimestampProvider.delegate=this).createColdObservable.bind(this),hot:this.createHotObservable.bind(this),flush:this.flush.bind(this),time:this.createTime.bind(this),expectObservable:this.expectObservable.bind(this),expectSubscriptions:this.expectSubscriptions.bind(this),animate:i.animate});try{var s=e(a);return this.flush(),s}finally{TestScheduler.frameTimeFactor=r,this.maxFrames=t,this.runMode=!1,animationFrameProvider.delegate=void 0,dateTimestampProvider.delegate=void 0,immediateProvider.delegate=void 0,intervalProvider.delegate=void 0,timeoutProvider.delegate=void 0,performanceTimestampProvider.delegate=void 0}}}TestScheduler.frameTimeFactor=10;export{TestScheduler};