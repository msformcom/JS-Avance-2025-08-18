import{Observable}from"../Observable";import{iterator as Symbol_iterator}from"../symbol/iterator";import{isFunction}from"../util/isFunction";import{executeSchedule}from"../util/executeSchedule";function scheduleIterable(e,t){return new Observable(r=>{let o;return executeSchedule(r,t,()=>{o=e[Symbol_iterator](),executeSchedule(r,t,()=>{let e,t;try{({value:e,done:t}=o.next())}catch(e){return void r.error(e)}t?r.complete():r.next(e)},0,!0)}),()=>isFunction(null==o?void 0:o.return)&&o.return()})}export{scheduleIterable};