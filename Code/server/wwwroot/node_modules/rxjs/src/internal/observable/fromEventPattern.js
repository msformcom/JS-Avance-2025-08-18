import{Observable}from"../Observable";import{isFunction}from"../util/isFunction";import{mapOneOrManyArgs}from"../util/mapOneOrManyArgs";function fromEventPattern(e,o,r){return r?fromEventPattern(e,o).pipe(mapOneOrManyArgs(r)):new Observable(n=>{let r=(...r)=>n.next(1===r.length?r[0]:r),t=e(r);return isFunction(o)?()=>o(r,t):void 0})}export{fromEventPattern};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vYnNlcnZhYmxlL2Zyb21FdmVudFBhdHRlcm4udHMiXSwibmFtZXMiOlsiT2JzZXJ2YWJsZSIsImlzRnVuY3Rpb24iLCJtYXBPbmVPck1hbnlBcmdzIiwiZnJvbUV2ZW50UGF0dGVybiIsImFkZEhhbmRsZXIiLCJyZW1vdmVIYW5kbGVyIiwicmVzdWx0U2VsZWN0b3IiLCJwaXBlIiwiaGFuZGxlciIsImUiLCJzdWJzY3JpYmVyIiwibmV4dCIsImxlbmd0aCIsInJldFZhbHVlIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiT0FBU0EsVUFBaUMsS0FBZix1QkFDbEJDLFVBQXNDLEtBQXBCLDRCQUVsQkMsZ0JBQWtELEtBQTFCLDJCQXNJM0IsU0FBVUMsaUJBQ2RDLEVBQ0FDLEVBQ0FDLEdBRUEsT0FBSUEsRUFDS0gsaUJBQW9CQyxFQUFZQyxDQUFhLEVBQUVFLEtBQUtMLGlCQUFpQkksQ0FBYyxDQUFDLEVBR3RGLElBQUlOLFdBQW9CLElBQzdCLElBQU1RLEVBQVUsSUFBSUMsSUFBV0MsRUFBV0MsS0FBa0IsSUFBYkYsRUFBRUcsT0FBZUgsRUFBRSxHQUFLQSxDQUFDLEVBQ2xFSSxFQUFXVCxFQUFXSSxDQUFPLEVBQ25DLE9BQU9QLFdBQVdJLENBQWEsRUFBSSxJQUFNQSxFQUFjRyxFQUFTSyxDQUFRLEVBQUlDLEtBQUFBLENBQzlFLENBQUMsQ0FDSCxRQWRnQlgsZ0JBY2hCIiwiZmlsZSI6Im5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vYnNlcnZhYmxlL2Zyb21FdmVudFBhdHRlcm4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSAnLi4vdXRpbC9pc0Z1bmN0aW9uJztcbmltcG9ydCB7IE5vZGVFdmVudEhhbmRsZXIgfSBmcm9tICcuL2Zyb21FdmVudCc7XG5pbXBvcnQgeyBtYXBPbmVPck1hbnlBcmdzIH0gZnJvbSAnLi4vdXRpbC9tYXBPbmVPck1hbnlBcmdzJztcblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUV2ZW50UGF0dGVybjxUPihcbiAgYWRkSGFuZGxlcjogKGhhbmRsZXI6IE5vZGVFdmVudEhhbmRsZXIpID0+IGFueSxcbiAgcmVtb3ZlSGFuZGxlcj86IChoYW5kbGVyOiBOb2RlRXZlbnRIYW5kbGVyLCBzaWduYWw/OiBhbnkpID0+IHZvaWRcbik6IE9ic2VydmFibGU8VD47XG5leHBvcnQgZnVuY3Rpb24gZnJvbUV2ZW50UGF0dGVybjxUPihcbiAgYWRkSGFuZGxlcjogKGhhbmRsZXI6IE5vZGVFdmVudEhhbmRsZXIpID0+IGFueSxcbiAgcmVtb3ZlSGFuZGxlcj86IChoYW5kbGVyOiBOb2RlRXZlbnRIYW5kbGVyLCBzaWduYWw/OiBhbnkpID0+IHZvaWQsXG4gIHJlc3VsdFNlbGVjdG9yPzogKC4uLmFyZ3M6IGFueVtdKSA9PiBUXG4pOiBPYnNlcnZhYmxlPFQ+O1xuLyogdHNsaW50OmVuYWJsZTptYXgtbGluZS1sZW5ndGggKi9cblxuLyoqXG4gKiBDcmVhdGVzIGFuIE9ic2VydmFibGUgZnJvbSBhbiBhcmJpdHJhcnkgQVBJIGZvciByZWdpc3RlcmluZyBldmVudCBoYW5kbGVycy5cbiAqXG4gKiA8c3BhbiBjbGFzcz1cImluZm9ybWFsXCI+V2hlbiB0aGF0IG1ldGhvZCBmb3IgYWRkaW5nIGV2ZW50IGhhbmRsZXIgd2FzIHNvbWV0aGluZyB7QGxpbmsgZnJvbUV2ZW50fVxuICogd2FzIG5vdCBwcmVwYXJlZCBmb3IuPC9zcGFuPlxuICpcbiAqICFbXShmcm9tRXZlbnRQYXR0ZXJuLnBuZylcbiAqXG4gKiBgZnJvbUV2ZW50UGF0dGVybmAgYWxsb3dzIHlvdSB0byBjb252ZXJ0IGludG8gYW4gT2JzZXJ2YWJsZSBhbnkgQVBJIHRoYXQgc3VwcG9ydHMgcmVnaXN0ZXJpbmcgaGFuZGxlciBmdW5jdGlvbnNcbiAqIGZvciBldmVudHMuIEl0IGlzIHNpbWlsYXIgdG8ge0BsaW5rIGZyb21FdmVudH0sIGJ1dCBmYXJcbiAqIG1vcmUgZmxleGlibGUuIEluIGZhY3QsIGFsbCB1c2UgY2FzZXMgb2Yge0BsaW5rIGZyb21FdmVudH0gY291bGQgYmUgZWFzaWx5IGhhbmRsZWQgYnlcbiAqIGBmcm9tRXZlbnRQYXR0ZXJuYCAoYWx0aG91Z2ggaW4gc2xpZ2h0bHkgbW9yZSB2ZXJib3NlIHdheSkuXG4gKlxuICogVGhpcyBvcGVyYXRvciBhY2NlcHRzIGFzIGEgZmlyc3QgYXJndW1lbnQgYW4gYGFkZEhhbmRsZXJgIGZ1bmN0aW9uLCB3aGljaCB3aWxsIGJlIGluamVjdGVkIHdpdGhcbiAqIGhhbmRsZXIgcGFyYW1ldGVyLiBUaGF0IGhhbmRsZXIgaXMgYWN0dWFsbHkgYW4gZXZlbnQgaGFuZGxlciBmdW5jdGlvbiB0aGF0IHlvdSBub3cgY2FuIHBhc3NcbiAqIHRvIEFQSSBleHBlY3RpbmcgaXQuIGBhZGRIYW5kbGVyYCB3aWxsIGJlIGNhbGxlZCB3aGVuZXZlciBPYnNlcnZhYmxlXG4gKiByZXR1cm5lZCBieSB0aGUgb3BlcmF0b3IgaXMgc3Vic2NyaWJlZCwgc28gcmVnaXN0ZXJpbmcgaGFuZGxlciBpbiBBUEkgd2lsbCBub3RcbiAqIG5lY2Vzc2FyaWx5IGhhcHBlbiB3aGVuIGBmcm9tRXZlbnRQYXR0ZXJuYCBpcyBjYWxsZWQuXG4gKlxuICogQWZ0ZXIgcmVnaXN0cmF0aW9uLCBldmVyeSB0aW1lIGFuIGV2ZW50IHRoYXQgd2UgbGlzdGVuIHRvIGhhcHBlbnMsXG4gKiBPYnNlcnZhYmxlIHJldHVybmVkIGJ5IGBmcm9tRXZlbnRQYXR0ZXJuYCB3aWxsIGVtaXQgdmFsdWUgdGhhdCBldmVudCBoYW5kbGVyXG4gKiBmdW5jdGlvbiB3YXMgY2FsbGVkIHdpdGguIE5vdGUgdGhhdCBpZiBldmVudCBoYW5kbGVyIHdhcyBjYWxsZWQgd2l0aCBtb3JlXG4gKiB0aGFuIG9uZSBhcmd1bWVudCwgc2Vjb25kIGFuZCBmb2xsb3dpbmcgYXJndW1lbnRzIHdpbGwgbm90IGFwcGVhciBpbiB0aGUgT2JzZXJ2YWJsZS5cbiAqXG4gKiBJZiBBUEkgeW91IGFyZSB1c2luZyBhbGxvd3MgdG8gdW5yZWdpc3RlciBldmVudCBoYW5kbGVycyBhcyB3ZWxsLCB5b3UgY2FuIHBhc3MgdG8gYGZyb21FdmVudFBhdHRlcm5gXG4gKiBhbm90aGVyIGZ1bmN0aW9uIC0gYHJlbW92ZUhhbmRsZXJgIC0gYXMgYSBzZWNvbmQgcGFyYW1ldGVyLiBJdCB3aWxsIGJlIGluamVjdGVkXG4gKiB3aXRoIHRoZSBzYW1lIGhhbmRsZXIgZnVuY3Rpb24gYXMgYmVmb3JlLCB3aGljaCBub3cgeW91IGNhbiB1c2UgdG8gdW5yZWdpc3RlclxuICogaXQgZnJvbSB0aGUgQVBJLiBgcmVtb3ZlSGFuZGxlcmAgd2lsbCBiZSBjYWxsZWQgd2hlbiBjb25zdW1lciBvZiByZXN1bHRpbmcgT2JzZXJ2YWJsZVxuICogdW5zdWJzY3JpYmVzIGZyb20gaXQuXG4gKlxuICogSW4gc29tZSBBUElzIHVucmVnaXN0ZXJpbmcgaXMgYWN0dWFsbHkgaGFuZGxlZCBkaWZmZXJlbnRseS4gTWV0aG9kIHJlZ2lzdGVyaW5nIGFuIGV2ZW50IGhhbmRsZXJcbiAqIHJldHVybnMgc29tZSBraW5kIG9mIHRva2VuLCB3aGljaCBpcyBsYXRlciB1c2VkIHRvIGlkZW50aWZ5IHdoaWNoIGZ1bmN0aW9uIHNob3VsZFxuICogYmUgdW5yZWdpc3RlcmVkIG9yIGl0IGl0c2VsZiBoYXMgbWV0aG9kIHRoYXQgdW5yZWdpc3RlcnMgZXZlbnQgaGFuZGxlci5cbiAqIElmIHRoYXQgaXMgdGhlIGNhc2Ugd2l0aCB5b3VyIEFQSSwgbWFrZSBzdXJlIHRva2VuIHJldHVybmVkXG4gKiBieSByZWdpc3RlcmluZyBtZXRob2QgaXMgcmV0dXJuZWQgYnkgYGFkZEhhbmRsZXJgLiBUaGVuIGl0IHdpbGwgYmUgcGFzc2VkXG4gKiBhcyBhIHNlY29uZCBhcmd1bWVudCB0byBgcmVtb3ZlSGFuZGxlcmAsIHdoZXJlIHlvdSB3aWxsIGJlIGFibGUgdG8gdXNlIGl0LlxuICpcbiAqIElmIHlvdSBuZWVkIGFjY2VzcyB0byBhbGwgZXZlbnQgaGFuZGxlciBwYXJhbWV0ZXJzIChub3Qgb25seSB0aGUgZmlyc3Qgb25lKSxcbiAqIG9yIHlvdSBuZWVkIHRvIHRyYW5zZm9ybSB0aGVtIGluIGFueSB3YXksIHlvdSBjYW4gY2FsbCBgZnJvbUV2ZW50UGF0dGVybmAgd2l0aCBvcHRpb25hbFxuICogdGhpcmQgcGFyYW1ldGVyIC0gcHJvamVjdCBmdW5jdGlvbiB3aGljaCB3aWxsIGFjY2VwdCBhbGwgYXJndW1lbnRzIHBhc3NlZCB0b1xuICogZXZlbnQgaGFuZGxlciB3aGVuIGl0IGlzIGNhbGxlZC4gV2hhdGV2ZXIgaXMgcmV0dXJuZWQgZnJvbSBwcm9qZWN0IGZ1bmN0aW9uIHdpbGwgYXBwZWFyIG9uXG4gKiByZXN1bHRpbmcgc3RyZWFtIGluc3RlYWQgb2YgdXN1YWwgZXZlbnQgaGFuZGxlcnMgZmlyc3QgYXJndW1lbnQuIFRoaXMgbWVhbnNcbiAqIHRoYXQgZGVmYXVsdCBwcm9qZWN0IGNhbiBiZSB0aG91Z2h0IG9mIGFzIGZ1bmN0aW9uIHRoYXQgdGFrZXMgaXRzIGZpcnN0IHBhcmFtZXRlclxuICogYW5kIGlnbm9yZXMgdGhlIHJlc3QuXG4gKlxuICogIyMgRXhhbXBsZXNcbiAqXG4gKiBFbWl0cyBjbGlja3MgaGFwcGVuaW5nIG9uIHRoZSBET00gZG9jdW1lbnRcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZnJvbUV2ZW50UGF0dGVybiB9IGZyb20gJ3J4anMnO1xuICpcbiAqIGZ1bmN0aW9uIGFkZENsaWNrSGFuZGxlcihoYW5kbGVyKSB7XG4gKiAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlcik7XG4gKiB9XG4gKlxuICogZnVuY3Rpb24gcmVtb3ZlQ2xpY2tIYW5kbGVyKGhhbmRsZXIpIHtcbiAqICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVyKTtcbiAqIH1cbiAqXG4gKiBjb25zdCBjbGlja3MgPSBmcm9tRXZlbnRQYXR0ZXJuKFxuICogICBhZGRDbGlja0hhbmRsZXIsXG4gKiAgIHJlbW92ZUNsaWNrSGFuZGxlclxuICogKTtcbiAqIGNsaWNrcy5zdWJzY3JpYmUoeCA9PiBjb25zb2xlLmxvZyh4KSk7XG4gKlxuICogLy8gV2hlbmV2ZXIgeW91IGNsaWNrIGFueXdoZXJlIGluIHRoZSBicm93c2VyLCBET00gTW91c2VFdmVudFxuICogLy8gb2JqZWN0IHdpbGwgYmUgbG9nZ2VkLlxuICogYGBgXG4gKlxuICogVXNlIHdpdGggQVBJIHRoYXQgcmV0dXJucyBjYW5jZWxsYXRpb24gdG9rZW5cbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZnJvbUV2ZW50UGF0dGVybiB9IGZyb20gJ3J4anMnO1xuICpcbiAqIGNvbnN0IHRva2VuID0gc29tZUFQSS5yZWdpc3RlckV2ZW50SGFuZGxlcihmdW5jdGlvbigpIHt9KTtcbiAqIHNvbWVBUEkudW5yZWdpc3RlckV2ZW50SGFuZGxlcih0b2tlbik7IC8vIHRoaXMgQVBJcyBjYW5jZWxsYXRpb24gbWV0aG9kIGFjY2VwdHNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vdCBoYW5kbGVyIGl0c2VsZiwgYnV0IHNwZWNpYWwgdG9rZW4uXG4gKlxuICogY29uc3Qgc29tZUFQSU9ic2VydmFibGUgPSBmcm9tRXZlbnRQYXR0ZXJuKFxuICogICBmdW5jdGlvbihoYW5kbGVyKSB7IHJldHVybiBzb21lQVBJLnJlZ2lzdGVyRXZlbnRIYW5kbGVyKGhhbmRsZXIpOyB9LCAvLyBOb3RlIHRoYXQgd2UgcmV0dXJuIHRoZSB0b2tlbiBoZXJlLi4uXG4gKiAgIGZ1bmN0aW9uKGhhbmRsZXIsIHRva2VuKSB7IHNvbWVBUEkudW5yZWdpc3RlckV2ZW50SGFuZGxlcih0b2tlbik7IH0gIC8vIC4uLnRvIHRoZW4gdXNlIGl0IGhlcmUuXG4gKiApO1xuICogYGBgXG4gKlxuICogVXNlIHdpdGggcHJvamVjdCBmdW5jdGlvblxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBmcm9tRXZlbnRQYXR0ZXJuIH0gZnJvbSAncnhqcyc7XG4gKlxuICogc29tZUFQSS5yZWdpc3RlckV2ZW50SGFuZGxlcigoZXZlbnRUeXBlLCBldmVudE1lc3NhZ2UpID0+IHtcbiAqICAgY29uc29sZS5sb2coZXZlbnRUeXBlLCBldmVudE1lc3NhZ2UpOyAvLyBMb2dzICdFVkVOVF9UWVBFJyAnRVZFTlRfTUVTU0FHRScgdG8gY29uc29sZS5cbiAqIH0pO1xuICpcbiAqIGNvbnN0IHNvbWVBUElPYnNlcnZhYmxlID0gZnJvbUV2ZW50UGF0dGVybihcbiAqICAgaGFuZGxlciA9PiBzb21lQVBJLnJlZ2lzdGVyRXZlbnRIYW5kbGVyKGhhbmRsZXIpLFxuICogICBoYW5kbGVyID0+IHNvbWVBUEkudW5yZWdpc3RlckV2ZW50SGFuZGxlcihoYW5kbGVyKVxuICogICAoZXZlbnRUeXBlLCBldmVudE1lc3NhZ2UpID0+IGV2ZW50VHlwZSArICcgLS0tICcgKyBldmVudE1lc3NhZ2UgLy8gd2l0aG91dCB0aGF0IGZ1bmN0aW9uIG9ubHkgJ0VWRU5UX1RZUEUnXG4gKiApOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3b3VsZCBiZSBlbWl0dGVkIGJ5IHRoZSBPYnNlcnZhYmxlXG4gKlxuICogc29tZUFQSU9ic2VydmFibGUuc3Vic2NyaWJlKHZhbHVlID0+IGNvbnNvbGUubG9nKHZhbHVlKSk7XG4gKlxuICogLy8gTG9nczpcbiAqIC8vICdFVkVOVF9UWVBFIC0tLSBFVkVOVF9NRVNTQUdFJ1xuICogYGBgXG4gKlxuICogQHNlZSB7QGxpbmsgZnJvbUV2ZW50fVxuICogQHNlZSB7QGxpbmsgYmluZENhbGxiYWNrfVxuICogQHNlZSB7QGxpbmsgYmluZE5vZGVDYWxsYmFja31cbiAqXG4gKiBAcGFyYW0gYWRkSGFuZGxlciBBIGZ1bmN0aW9uIHRoYXQgdGFrZXMgYSBgaGFuZGxlcmAgZnVuY3Rpb24gYXMgYXJndW1lbnQgYW5kIGF0dGFjaGVzIGl0XG4gKiBzb21laG93IHRvIHRoZSBhY3R1YWwgc291cmNlIG9mIGV2ZW50cy5cbiAqIEBwYXJhbSByZW1vdmVIYW5kbGVyIEEgZnVuY3Rpb24gdGhhdCB0YWtlcyBhIGBoYW5kbGVyYCBmdW5jdGlvbiBhcyBhbiBhcmd1bWVudCBhbmQgcmVtb3Zlc1xuICogaXQgZnJvbSB0aGUgZXZlbnQgc291cmNlLiBJZiBgYWRkSGFuZGxlcmAgcmV0dXJucyBzb21lIGtpbmQgb2YgdG9rZW4sIGByZW1vdmVIYW5kbGVyYCBmdW5jdGlvblxuICogd2lsbCBoYXZlIGl0IGFzIGEgc2Vjb25kIHBhcmFtZXRlci5cbiAqIEBwYXJhbSByZXN1bHRTZWxlY3RvciBBIGZ1bmN0aW9uIHRvIHRyYW5zZm9ybSByZXN1bHRzLiBJdCB0YWtlcyB0aGUgYXJndW1lbnRzIGZyb20gdGhlIGV2ZW50XG4gKiBoYW5kbGVyIGFuZCBzaG91bGQgcmV0dXJuIGEgc2luZ2xlIHZhbHVlLlxuICogQHJldHVybiBPYnNlcnZhYmxlIHdoaWNoLCB3aGVuIGFuIGV2ZW50IGhhcHBlbnMsIGVtaXRzIGZpcnN0IHBhcmFtZXRlciBwYXNzZWQgdG8gcmVnaXN0ZXJlZFxuICogZXZlbnQgaGFuZGxlci4gQWx0ZXJuYXRpdmVseSBpdCBlbWl0cyB3aGF0ZXZlciBwcm9qZWN0IGZ1bmN0aW9uIHJldHVybnMgYXQgdGhhdCBtb21lbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tRXZlbnRQYXR0ZXJuPFQ+KFxuICBhZGRIYW5kbGVyOiAoaGFuZGxlcjogTm9kZUV2ZW50SGFuZGxlcikgPT4gYW55LFxuICByZW1vdmVIYW5kbGVyPzogKGhhbmRsZXI6IE5vZGVFdmVudEhhbmRsZXIsIHNpZ25hbD86IGFueSkgPT4gdm9pZCxcbiAgcmVzdWx0U2VsZWN0b3I/OiAoLi4uYXJnczogYW55W10pID0+IFRcbik6IE9ic2VydmFibGU8VCB8IFRbXT4ge1xuICBpZiAocmVzdWx0U2VsZWN0b3IpIHtcbiAgICByZXR1cm4gZnJvbUV2ZW50UGF0dGVybjxUPihhZGRIYW5kbGVyLCByZW1vdmVIYW5kbGVyKS5waXBlKG1hcE9uZU9yTWFueUFyZ3MocmVzdWx0U2VsZWN0b3IpKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgT2JzZXJ2YWJsZTxUIHwgVFtdPigoc3Vic2NyaWJlcikgPT4ge1xuICAgIGNvbnN0IGhhbmRsZXIgPSAoLi4uZTogVFtdKSA9PiBzdWJzY3JpYmVyLm5leHQoZS5sZW5ndGggPT09IDEgPyBlWzBdIDogZSk7XG4gICAgY29uc3QgcmV0VmFsdWUgPSBhZGRIYW5kbGVyKGhhbmRsZXIpO1xuICAgIHJldHVybiBpc0Z1bmN0aW9uKHJlbW92ZUhhbmRsZXIpID8gKCkgPT4gcmVtb3ZlSGFuZGxlcihoYW5kbGVyLCByZXRWYWx1ZSkgOiB1bmRlZmluZWQ7XG4gIH0pO1xufVxuIl19
