import{Observable}from"../Observable";import{isFunction}from"../util/isFunction";function throwError(r,o){let e=isFunction(r)?r:()=>r,t=r=>r.error(e());return new Observable(o?r=>o.schedule(t,0,r):t)}export{throwError};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vYnNlcnZhYmxlL3Rocm93RXJyb3IudHMiXSwibmFtZXMiOlsiT2JzZXJ2YWJsZSIsImlzRnVuY3Rpb24iLCJ0aHJvd0Vycm9yIiwiZXJyb3JPckVycm9yRmFjdG9yeSIsInNjaGVkdWxlciIsImVycm9yRmFjdG9yeSIsImluaXQiLCJzdWJzY3JpYmVyIiwiZXJyb3IiLCJzY2hlZHVsZSJdLCJtYXBwaW5ncyI6Ik9BQVNBLFVBQWlDLEtBQWYsdUJBR2xCQyxVQUFzQyxLQUFwQixxQkFxSHJCLFNBQVVDLFdBQVdDLEVBQTBCQyxHQUNuRCxJQUFNQyxFQUFlSixXQUFXRSxDQUFtQixFQUFJQSxFQUFzQixJQUFNQSxFQUM3RUcsRUFBTyxHQUFtQ0MsRUFBV0MsTUFBTUgsRUFBWSxDQUFFLEVBQy9FLE9BQU8sSUFBSUwsV0FBV0ksRUFBWSxHQUFnQkEsRUFBVUssU0FBU0gsRUFBYSxFQUFHQyxDQUFVLEVBQUlELENBQUksQ0FDekcsUUFKZ0JKLFVBSWhCIiwiZmlsZSI6Im5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vYnNlcnZhYmxlL3Rocm93RXJyb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBTdWJzY3JpYmVyIH0gZnJvbSAnLi4vU3Vic2NyaWJlcic7XG5pbXBvcnQgeyBTY2hlZHVsZXJMaWtlIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgaXNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWwvaXNGdW5jdGlvbic7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBvYnNlcnZhYmxlIHRoYXQgd2lsbCBjcmVhdGUgYW4gZXJyb3IgaW5zdGFuY2UgYW5kIHB1c2ggaXQgdG8gdGhlIGNvbnN1bWVyIGFzIGFuIGVycm9yXG4gKiBpbW1lZGlhdGVseSB1cG9uIHN1YnNjcmlwdGlvbi5cbiAqXG4gKiA8c3BhbiBjbGFzcz1cImluZm9ybWFsXCI+SnVzdCBlcnJvcnMgYW5kIGRvZXMgbm90aGluZyBlbHNlPC9zcGFuPlxuICpcbiAqICFbXSh0aHJvdy5wbmcpXG4gKlxuICogVGhpcyBjcmVhdGlvbiBmdW5jdGlvbiBpcyB1c2VmdWwgZm9yIGNyZWF0aW5nIGFuIG9ic2VydmFibGUgdGhhdCB3aWxsIGNyZWF0ZSBhbiBlcnJvciBhbmQgZXJyb3IgZXZlcnlcbiAqIHRpbWUgaXQgaXMgc3Vic2NyaWJlZCB0by4gR2VuZXJhbGx5LCBpbnNpZGUgb2YgbW9zdCBvcGVyYXRvcnMgd2hlbiB5b3UgbWlnaHQgd2FudCB0byByZXR1cm4gYW4gZXJyb3JlZFxuICogb2JzZXJ2YWJsZSwgdGhpcyBpcyB1bm5lY2Vzc2FyeS4gSW4gbW9zdCBjYXNlcywgc3VjaCBhcyBpbiB0aGUgaW5uZXIgcmV0dXJuIG9mIHtAbGluayBjb25jYXRNYXB9LFxuICoge0BsaW5rIG1lcmdlTWFwfSwge0BsaW5rIGRlZmVyfSwgYW5kIG1hbnkgb3RoZXJzLCB5b3UgY2FuIHNpbXBseSB0aHJvdyB0aGUgZXJyb3IsIGFuZCBSeEpTIHdpbGwgcGlja1xuICogdGhhdCB1cCBhbmQgbm90aWZ5IHRoZSBjb25zdW1lciBvZiB0aGUgZXJyb3IuXG4gKlxuICogIyMgRXhhbXBsZVxuICpcbiAqIENyZWF0ZSBhIHNpbXBsZSBvYnNlcnZhYmxlIHRoYXQgd2lsbCBjcmVhdGUgYSBuZXcgZXJyb3Igd2l0aCBhIHRpbWVzdGFtcCBhbmQgbG9nIGl0XG4gKiBhbmQgdGhlIG1lc3NhZ2UgZXZlcnkgdGltZSB5b3Ugc3Vic2NyaWJlIHRvIGl0XG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IHRocm93RXJyb3IgfSBmcm9tICdyeGpzJztcbiAqXG4gKiBsZXQgZXJyb3JDb3VudCA9IDA7XG4gKlxuICogY29uc3QgZXJyb3JXaXRoVGltZXN0YW1wJCA9IHRocm93RXJyb3IoKCkgPT4ge1xuICogICBjb25zdCBlcnJvcjogYW55ID0gbmV3IEVycm9yKGBUaGlzIGlzIGVycm9yIG51bWJlciAkeyArK2Vycm9yQ291bnQgfWApO1xuICogICBlcnJvci50aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICogICByZXR1cm4gZXJyb3I7XG4gKiB9KTtcbiAqXG4gKiBlcnJvcldpdGhUaW1lc3RhbXAkLnN1YnNjcmliZSh7XG4gKiAgIGVycm9yOiBlcnIgPT4gY29uc29sZS5sb2coZXJyLnRpbWVzdGFtcCwgZXJyLm1lc3NhZ2UpXG4gKiB9KTtcbiAqXG4gKiBlcnJvcldpdGhUaW1lc3RhbXAkLnN1YnNjcmliZSh7XG4gKiAgIGVycm9yOiBlcnIgPT4gY29uc29sZS5sb2coZXJyLnRpbWVzdGFtcCwgZXJyLm1lc3NhZ2UpXG4gKiB9KTtcbiAqXG4gKiAvLyBMb2dzIHRoZSB0aW1lc3RhbXAgYW5kIGEgbmV3IGVycm9yIG1lc3NhZ2UgZm9yIGVhY2ggc3Vic2NyaXB0aW9uXG4gKiBgYGBcbiAqXG4gKiAjIyMgVW5uZWNlc3NhcnkgdXNhZ2VcbiAqXG4gKiBVc2luZyBgdGhyb3dFcnJvcmAgaW5zaWRlIG9mIGFuIG9wZXJhdG9yIG9yIGNyZWF0aW9uIGZ1bmN0aW9uXG4gKiB3aXRoIGEgY2FsbGJhY2ssIGlzIHVzdWFsbHkgbm90IG5lY2Vzc2FyeVxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBvZiwgY29uY2F0TWFwLCB0aW1lciwgdGhyb3dFcnJvciB9IGZyb20gJ3J4anMnO1xuICpcbiAqIGNvbnN0IGRlbGF5cyQgPSBvZigxMDAwLCAyMDAwLCBJbmZpbml0eSwgMzAwMCk7XG4gKlxuICogZGVsYXlzJC5waXBlKFxuICogICBjb25jYXRNYXAobXMgPT4ge1xuICogICAgIGlmIChtcyA8IDEwMDAwKSB7XG4gKiAgICAgICByZXR1cm4gdGltZXIobXMpO1xuICogICAgIH0gZWxzZSB7XG4gKiAgICAgICAvLyBUaGlzIGlzIHByb2JhYmx5IG92ZXJraWxsLlxuICogICAgICAgcmV0dXJuIHRocm93RXJyb3IoKCkgPT4gbmV3IEVycm9yKGBJbnZhbGlkIHRpbWUgJHsgbXMgfWApKTtcbiAqICAgICB9XG4gKiAgIH0pXG4gKiApXG4gKiAuc3Vic2NyaWJlKHtcbiAqICAgbmV4dDogY29uc29sZS5sb2csXG4gKiAgIGVycm9yOiBjb25zb2xlLmVycm9yXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIFlvdSBjYW4ganVzdCB0aHJvdyB0aGUgZXJyb3IgaW5zdGVhZFxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBvZiwgY29uY2F0TWFwLCB0aW1lciB9IGZyb20gJ3J4anMnO1xuICpcbiAqIGNvbnN0IGRlbGF5cyQgPSBvZigxMDAwLCAyMDAwLCBJbmZpbml0eSwgMzAwMCk7XG4gKlxuICogZGVsYXlzJC5waXBlKFxuICogICBjb25jYXRNYXAobXMgPT4ge1xuICogICAgIGlmIChtcyA8IDEwMDAwKSB7XG4gKiAgICAgICByZXR1cm4gdGltZXIobXMpO1xuICogICAgIH0gZWxzZSB7XG4gKiAgICAgICAvLyBDbGVhbmVyIGFuZCBlYXNpZXIgdG8gcmVhZCBmb3IgbW9zdCBmb2xrcy5cbiAqICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0aW1lICR7IG1zIH1gKTtcbiAqICAgICB9XG4gKiAgIH0pXG4gKiApXG4gKiAuc3Vic2NyaWJlKHtcbiAqICAgbmV4dDogY29uc29sZS5sb2csXG4gKiAgIGVycm9yOiBjb25zb2xlLmVycm9yXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBlcnJvckZhY3RvcnkgQSBmYWN0b3J5IGZ1bmN0aW9uIHRoYXQgd2lsbCBjcmVhdGUgdGhlIGVycm9yIGluc3RhbmNlIHRoYXQgaXMgcHVzaGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dFcnJvcihlcnJvckZhY3Rvcnk6ICgpID0+IGFueSk6IE9ic2VydmFibGU8bmV2ZXI+O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHdpbGwgZXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGVycm9yIGltbWVkaWF0ZWx5IHVwb24gc3Vic2NyaXB0aW9uLlxuICpcbiAqIEBwYXJhbSBlcnJvciBUaGUgZXJyb3IgaW5zdGFuY2UgdG8gZW1pdFxuICogQGRlcHJlY2F0ZWQgU3VwcG9ydCBmb3IgcGFzc2luZyBhbiBlcnJvciB2YWx1ZSB3aWxsIGJlIHJlbW92ZWQgaW4gdjguIEluc3RlYWQsIHBhc3MgYSBmYWN0b3J5IGZ1bmN0aW9uIHRvIGB0aHJvd0Vycm9yKCgpID0+IG5ldyBFcnJvcigndGVzdCcpKWAuIFRoaXMgaXNcbiAqIGJlY2F1c2UgaXQgd2lsbCBjcmVhdGUgdGhlIGVycm9yIGF0IHRoZSBtb21lbnQgaXQgc2hvdWxkIGJlIGNyZWF0ZWQgYW5kIGNhcHR1cmUgYSBtb3JlIGFwcHJvcHJpYXRlIHN0YWNrIHRyYWNlLiBJZlxuICogZm9yIHNvbWUgcmVhc29uIHlvdSBuZWVkIHRvIGNyZWF0ZSB0aGUgZXJyb3IgYWhlYWQgb2YgdGltZSwgeW91IGNhbiBzdGlsbCBkbyB0aGF0OiBgY29uc3QgZXJyID0gbmV3IEVycm9yKCd0ZXN0Jyk7IHRocm93RXJyb3IoKCkgPT4gZXJyKTtgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dFcnJvcihlcnJvcjogYW55KTogT2JzZXJ2YWJsZTxuZXZlcj47XG5cbi8qKlxuICogTm90aWZpZXMgdGhlIGNvbnN1bWVyIG9mIGFuIGVycm9yIHVzaW5nIGEgZ2l2ZW4gc2NoZWR1bGVyIGJ5IHNjaGVkdWxpbmcgaXQgYXQgZGVsYXkgYDBgIHVwb24gc3Vic2NyaXB0aW9uLlxuICpcbiAqIEBwYXJhbSBlcnJvck9yRXJyb3JGYWN0b3J5IEFuIGVycm9yIGluc3RhbmNlIG9yIGVycm9yIGZhY3RvcnlcbiAqIEBwYXJhbSBzY2hlZHVsZXIgQSBzY2hlZHVsZXIgdG8gdXNlIHRvIHNjaGVkdWxlIHRoZSBlcnJvciBub3RpZmljYXRpb25cbiAqIEBkZXByZWNhdGVkIFRoZSBgc2NoZWR1bGVyYCBwYXJhbWV0ZXIgd2lsbCBiZSByZW1vdmVkIGluIHY4LlxuICogVXNlIGB0aHJvd0Vycm9yYCBpbiBjb21iaW5hdGlvbiB3aXRoIHtAbGluayBvYnNlcnZlT259OiBgdGhyb3dFcnJvcigoKSA9PiBuZXcgRXJyb3IoJ3Rlc3QnKSkucGlwZShvYnNlcnZlT24oc2NoZWR1bGVyKSk7YC5cbiAqIERldGFpbHM6IGh0dHBzOi8vcnhqcy5kZXYvZGVwcmVjYXRpb25zL3NjaGVkdWxlci1hcmd1bWVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dFcnJvcihlcnJvck9yRXJyb3JGYWN0b3J5OiBhbnksIHNjaGVkdWxlcjogU2NoZWR1bGVyTGlrZSk6IE9ic2VydmFibGU8bmV2ZXI+O1xuXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dFcnJvcihlcnJvck9yRXJyb3JGYWN0b3J5OiBhbnksIHNjaGVkdWxlcj86IFNjaGVkdWxlckxpa2UpOiBPYnNlcnZhYmxlPG5ldmVyPiB7XG4gIGNvbnN0IGVycm9yRmFjdG9yeSA9IGlzRnVuY3Rpb24oZXJyb3JPckVycm9yRmFjdG9yeSkgPyBlcnJvck9yRXJyb3JGYWN0b3J5IDogKCkgPT4gZXJyb3JPckVycm9yRmFjdG9yeTtcbiAgY29uc3QgaW5pdCA9IChzdWJzY3JpYmVyOiBTdWJzY3JpYmVyPG5ldmVyPikgPT4gc3Vic2NyaWJlci5lcnJvcihlcnJvckZhY3RvcnkoKSk7XG4gIHJldHVybiBuZXcgT2JzZXJ2YWJsZShzY2hlZHVsZXIgPyAoc3Vic2NyaWJlcikgPT4gc2NoZWR1bGVyLnNjaGVkdWxlKGluaXQgYXMgYW55LCAwLCBzdWJzY3JpYmVyKSA6IGluaXQpO1xufVxuIl19
