import{Observable}from"../Observable";import{Subscription}from"../Subscription";import{refCount as higherOrderRefCount}from"../operators/refCount";import{createOperatorSubscriber}from"../operators/OperatorSubscriber";import{hasLift}from"../util/lift";class ConnectableObservable extends Observable{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._subject=null,this._refCount=0,this._connection=null,hasLift(t)&&(this.lift=t.lift)}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){var t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject}_teardown(){this._refCount=0;var t=this._connection;this._subject=this._connection=null,t?.unsubscribe()}connect(){let t=this._connection;if(!t){t=this._connection=new Subscription;let e=this.getSubject();t.add(this.source.subscribe(createOperatorSubscriber(e,void 0,()=>{this._teardown(),e.complete()},t=>{this._teardown(),e.error(t)},()=>this._teardown()))),t.closed&&(this._connection=null,t=Subscription.EMPTY)}return t}refCount(){return higherOrderRefCount()(this)}}export{ConnectableObservable};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vYnNlcnZhYmxlL0Nvbm5lY3RhYmxlT2JzZXJ2YWJsZS50cyJdLCJuYW1lcyI6WyJPYnNlcnZhYmxlIiwiU3Vic2NyaXB0aW9uIiwiaGlnaGVyT3JkZXJSZWZDb3VudCIsImNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlciIsImhhc0xpZnQiLCJDb25uZWN0YWJsZU9ic2VydmFibGUiLCJjb25zdHJ1Y3RvciIsInNvdXJjZSIsInN1YmplY3RGYWN0b3J5Iiwic3VwZXIiLCJ0aGlzIiwiX3N1YmplY3QiLCJfcmVmQ291bnQiLCJfY29ubmVjdGlvbiIsImxpZnQiLCJfc3Vic2NyaWJlIiwic3Vic2NyaWJlciIsImdldFN1YmplY3QiLCJzdWJzY3JpYmUiLCJzdWJqZWN0IiwiaXNTdG9wcGVkIiwiX3RlYXJkb3duIiwidW5zdWJzY3JpYmUiLCJjb25uZWN0IiwibGV0IiwiY29ubmVjdGlvbiIsImFkZCIsInVuZGVmaW5lZCIsImNvbXBsZXRlIiwiZXJyb3IiLCJlcnIiLCJjbG9zZWQiLCJFTVBUWSIsInJlZkNvdW50Il0sIm1hcHBpbmdzIjoiT0FDU0EsVUFBaUMsS0FBZix1QkFFbEJDLFlBQXFDLEtBQWpCLHlCQUNSQywrQkFBa0QsS0FBdkIsK0JBQ3ZDQyx3QkFBaUUsS0FBakMseUNBQ2hDQyxPQUE2QixLQUFkLHFCQVNYQyw4QkFBaUNMLFdBZ0I1Q00sWUFBbUJDLEVBQWlDQyxHQUNsREMsTUFBSyxFQURZQyxLQUFBSCxPQUFBQSxFQUFpQ0csS0FBQUYsZUFBQUEsRUFmMUNFLEtBQUFDLFNBQThCLEtBQzlCRCxLQUFBRSxVQUFvQixFQUNwQkYsS0FBQUcsWUFBbUMsS0FrQnZDVCxRQUFRRyxDQUFNLElBQ2hCRyxLQUFLSSxLQUFPUCxFQUFPTyxLQUV2QixDQUdVQyxXQUFXQyxHQUNuQixPQUFPTixLQUFLTyxXQUFVLEVBQUdDLFVBQVVGLENBQVUsQ0FDL0MsQ0FFVUMsYUFDUixJQUFNRSxFQUFVVCxLQUFLQyxTQUlyQixPQUhLUSxHQUFXQSxDQUFBQSxFQUFRQyxZQUN0QlYsS0FBS0MsU0FBV0QsS0FBS0YsZUFBYyxHQUU5QkUsS0FBS0MsUUFDZCxDQUVVVSxZQUNSWCxLQUFLRSxVQUFZLEVBQ2pCLElBQVFDLEVBQWdCSCxLQUFMLFlBQ25CQSxLQUFLQyxTQUFXRCxLQUFLRyxZQUFjLEtBQ25DQSxHQUFhUyxZQUFXLENBQzFCLENBTUFDLFVBQ0VDLElBQUlDLEVBQWFmLEtBQUtHLFlBQ3RCLEdBQUksQ0FBQ1ksRUFBWSxDQUNmQSxFQUFhZixLQUFLRyxZQUFjLElBQUlaLGFBQ3BDLElBQU1rQixFQUFVVCxLQUFLTyxXQUFVLEVBQy9CUSxFQUFXQyxJQUNUaEIsS0FBS0gsT0FBT1csVUFDVmYseUJBQ0VnQixFQUNBUSxLQUFBQSxFQUNBLEtBQ0VqQixLQUFLVyxVQUFTLEVBQ2RGLEVBQVFTLFNBQVEsQ0FDbEIsRUFDQSxJQUNFbEIsS0FBS1csVUFBUyxFQUNkRixFQUFRVSxNQUFNQyxDQUFHLENBQ25CLEVBQ0EsSUFBTXBCLEtBQUtXLFVBQVMsQ0FBRSxDQUN2QixDQUNGLEVBR0NJLEVBQVdNLFNBQ2JyQixLQUFLRyxZQUFjLEtBQ25CWSxFQUFheEIsYUFBYStCLE1BRTlCLENBQ0EsT0FBT1AsQ0FDVCxDQU1BUSxXQUNFLE9BQU8vQixvQkFBbUIsRUFBR1EsSUFBSSxDQUNuQyxDLFFBdkZXTCxxQiIsImZpbGUiOiJub2RlX21vZHVsZXMvcnhqcy9zcmMvaW50ZXJuYWwvb2JzZXJ2YWJsZS9Db25uZWN0YWJsZU9ic2VydmFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAnLi4vU3ViamVjdCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBTdWJzY3JpYmVyIH0gZnJvbSAnLi4vU3Vic2NyaWJlcic7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICcuLi9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgcmVmQ291bnQgYXMgaGlnaGVyT3JkZXJSZWZDb3VudCB9IGZyb20gJy4uL29wZXJhdG9ycy9yZWZDb3VudCc7XG5pbXBvcnQgeyBjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIgfSBmcm9tICcuLi9vcGVyYXRvcnMvT3BlcmF0b3JTdWJzY3JpYmVyJztcbmltcG9ydCB7IGhhc0xpZnQgfSBmcm9tICcuLi91dGlsL2xpZnQnO1xuXG4vKipcbiAqIEBjbGFzcyBDb25uZWN0YWJsZU9ic2VydmFibGU8VD5cbiAqIEBkZXByZWNhdGVkIFdpbGwgYmUgcmVtb3ZlZCBpbiB2OC4gVXNlIHtAbGluayBjb25uZWN0YWJsZX0gdG8gY3JlYXRlIGEgY29ubmVjdGFibGUgb2JzZXJ2YWJsZS5cbiAqIElmIHlvdSBhcmUgdXNpbmcgdGhlIGByZWZDb3VudGAgbWV0aG9kIG9mIGBDb25uZWN0YWJsZU9ic2VydmFibGVgLCB1c2UgdGhlIHtAbGluayBzaGFyZX0gb3BlcmF0b3JcbiAqIGluc3RlYWQuXG4gKiBEZXRhaWxzOiBodHRwczovL3J4anMuZGV2L2RlcHJlY2F0aW9ucy9tdWx0aWNhc3RpbmdcbiAqL1xuZXhwb3J0IGNsYXNzIENvbm5lY3RhYmxlT2JzZXJ2YWJsZTxUPiBleHRlbmRzIE9ic2VydmFibGU8VD4ge1xuICBwcm90ZWN0ZWQgX3N1YmplY3Q6IFN1YmplY3Q8VD4gfCBudWxsID0gbnVsbDtcbiAgcHJvdGVjdGVkIF9yZWZDb3VudDogbnVtYmVyID0gMDtcbiAgcHJvdGVjdGVkIF9jb25uZWN0aW9uOiBTdWJzY3JpcHRpb24gfCBudWxsID0gbnVsbDtcblxuICAvKipcbiAgICogQHBhcmFtIHNvdXJjZSBUaGUgc291cmNlIG9ic2VydmFibGVcbiAgICogQHBhcmFtIHN1YmplY3RGYWN0b3J5IFRoZSBmYWN0b3J5IHRoYXQgY3JlYXRlcyB0aGUgc3ViamVjdCB1c2VkIGludGVybmFsbHkuXG4gICAqIEBkZXByZWNhdGVkIFdpbGwgYmUgcmVtb3ZlZCBpbiB2OC4gVXNlIHtAbGluayBjb25uZWN0YWJsZX0gdG8gY3JlYXRlIGEgY29ubmVjdGFibGUgb2JzZXJ2YWJsZS5cbiAgICogYG5ldyBDb25uZWN0YWJsZU9ic2VydmFibGUoc291cmNlLCBmYWN0b3J5KWAgaXMgZXF1aXZhbGVudCB0b1xuICAgKiBgY29ubmVjdGFibGUoc291cmNlLCB7IGNvbm5lY3RvcjogZmFjdG9yeSB9KWAuXG4gICAqIFdoZW4gdGhlIGByZWZDb3VudCgpYCBtZXRob2QgaXMgbmVlZGVkLCB0aGUge0BsaW5rIHNoYXJlfSBvcGVyYXRvciBzaG91bGQgYmUgdXNlZCBpbnN0ZWFkOlxuICAgKiBgbmV3IENvbm5lY3RhYmxlT2JzZXJ2YWJsZShzb3VyY2UsIGZhY3RvcnkpLnJlZkNvdW50KClgIGlzIGVxdWl2YWxlbnQgdG9cbiAgICogYHNvdXJjZS5waXBlKHNoYXJlKHsgY29ubmVjdG9yOiBmYWN0b3J5IH0pKWAuXG4gICAqIERldGFpbHM6IGh0dHBzOi8vcnhqcy5kZXYvZGVwcmVjYXRpb25zL211bHRpY2FzdGluZ1xuICAgKi9cbiAgY29uc3RydWN0b3IocHVibGljIHNvdXJjZTogT2JzZXJ2YWJsZTxUPiwgcHJvdGVjdGVkIHN1YmplY3RGYWN0b3J5OiAoKSA9PiBTdWJqZWN0PFQ+KSB7XG4gICAgc3VwZXIoKTtcbiAgICAvLyBJZiB3ZSBoYXZlIGxpZnQsIG1vbmtleSBwYXRjaCB0aGF0IGhlcmUuIFRoaXMgaXMgZG9uZSBzbyBjdXN0b20gb2JzZXJ2YWJsZVxuICAgIC8vIHR5cGVzIHdpbGwgY29tcG9zZSB0aHJvdWdoIG11bHRpY2FzdC4gT3RoZXJ3aXNlIHRoZSByZXN1bHRpbmcgb2JzZXJ2YWJsZSB3b3VsZFxuICAgIC8vIHNpbXBseSBiZSBhbiBpbnN0YW5jZSBvZiBgQ29ubmVjdGFibGVPYnNlcnZhYmxlYC5cbiAgICBpZiAoaGFzTGlmdChzb3VyY2UpKSB7XG4gICAgICB0aGlzLmxpZnQgPSBzb3VyY2UubGlmdDtcbiAgICB9XG4gIH1cblxuICAvKiogQGludGVybmFsICovXG4gIHByb3RlY3RlZCBfc3Vic2NyaWJlKHN1YnNjcmliZXI6IFN1YnNjcmliZXI8VD4pIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdWJqZWN0KCkuc3Vic2NyaWJlKHN1YnNjcmliZXIpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldFN1YmplY3QoKTogU3ViamVjdDxUPiB7XG4gICAgY29uc3Qgc3ViamVjdCA9IHRoaXMuX3N1YmplY3Q7XG4gICAgaWYgKCFzdWJqZWN0IHx8IHN1YmplY3QuaXNTdG9wcGVkKSB7XG4gICAgICB0aGlzLl9zdWJqZWN0ID0gdGhpcy5zdWJqZWN0RmFjdG9yeSgpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fc3ViamVjdCE7XG4gIH1cblxuICBwcm90ZWN0ZWQgX3RlYXJkb3duKCkge1xuICAgIHRoaXMuX3JlZkNvdW50ID0gMDtcbiAgICBjb25zdCB7IF9jb25uZWN0aW9uIH0gPSB0aGlzO1xuICAgIHRoaXMuX3N1YmplY3QgPSB0aGlzLl9jb25uZWN0aW9uID0gbnVsbDtcbiAgICBfY29ubmVjdGlvbj8udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCB7QGxpbmsgQ29ubmVjdGFibGVPYnNlcnZhYmxlfSB3aWxsIGJlIHJlbW92ZWQgaW4gdjguIFVzZSB7QGxpbmsgY29ubmVjdGFibGV9IGluc3RlYWQuXG4gICAqIERldGFpbHM6IGh0dHBzOi8vcnhqcy5kZXYvZGVwcmVjYXRpb25zL211bHRpY2FzdGluZ1xuICAgKi9cbiAgY29ubmVjdCgpOiBTdWJzY3JpcHRpb24ge1xuICAgIGxldCBjb25uZWN0aW9uID0gdGhpcy5fY29ubmVjdGlvbjtcbiAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgIGNvbm5lY3Rpb24gPSB0aGlzLl9jb25uZWN0aW9uID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuICAgICAgY29uc3Qgc3ViamVjdCA9IHRoaXMuZ2V0U3ViamVjdCgpO1xuICAgICAgY29ubmVjdGlvbi5hZGQoXG4gICAgICAgIHRoaXMuc291cmNlLnN1YnNjcmliZShcbiAgICAgICAgICBjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIoXG4gICAgICAgICAgICBzdWJqZWN0IGFzIGFueSxcbiAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5fdGVhcmRvd24oKTtcbiAgICAgICAgICAgICAgc3ViamVjdC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIChlcnIpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5fdGVhcmRvd24oKTtcbiAgICAgICAgICAgICAgc3ViamVjdC5lcnJvcihlcnIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICgpID0+IHRoaXMuX3RlYXJkb3duKClcbiAgICAgICAgICApXG4gICAgICAgIClcbiAgICAgICk7XG5cbiAgICAgIGlmIChjb25uZWN0aW9uLmNsb3NlZCkge1xuICAgICAgICB0aGlzLl9jb25uZWN0aW9uID0gbnVsbDtcbiAgICAgICAgY29ubmVjdGlvbiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvbm5lY3Rpb247XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQge0BsaW5rIENvbm5lY3RhYmxlT2JzZXJ2YWJsZX0gd2lsbCBiZSByZW1vdmVkIGluIHY4LiBVc2UgdGhlIHtAbGluayBzaGFyZX0gb3BlcmF0b3IgaW5zdGVhZC5cbiAgICogRGV0YWlsczogaHR0cHM6Ly9yeGpzLmRldi9kZXByZWNhdGlvbnMvbXVsdGljYXN0aW5nXG4gICAqL1xuICByZWZDb3VudCgpOiBPYnNlcnZhYmxlPFQ+IHtcbiAgICByZXR1cm4gaGlnaGVyT3JkZXJSZWZDb3VudCgpKHRoaXMpIGFzIE9ic2VydmFibGU8VD47XG4gIH1cbn1cbiJdfQ==
