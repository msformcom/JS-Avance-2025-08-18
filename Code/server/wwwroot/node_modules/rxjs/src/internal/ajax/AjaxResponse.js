import{getXHRResponse}from"./getXHRResponse";class AjaxResponse{constructor(e,s,t,o="download_load"){this.originalEvent=e,this.xhr=s,this.request=t,this.type=o;var{status:t,responseType:o}=s,t=(this.status=t??0,this.responseType=o??"",s.getAllResponseHeaders()),{loaded:o,total:t}=(this.responseHeaders=t?t.split("\n").reduce((e,s)=>{var t=s.indexOf(": ");return e[s.slice(0,t)]=s.slice(t+2),e},{}):{},this.response=getXHRResponse(s),e);this.loaded=o,this.total=t}}export{AjaxResponse};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9hamF4L0FqYXhSZXNwb25zZS50cyJdLCJuYW1lcyI6WyJnZXRYSFJSZXNwb25zZSIsIkFqYXhSZXNwb25zZSIsImNvbnN0cnVjdG9yIiwib3JpZ2luYWxFdmVudCIsInhociIsInJlcXVlc3QiLCJ0eXBlIiwidGhpcyIsInN0YXR1cyIsInJlc3BvbnNlVHlwZSIsImFsbEhlYWRlcnMiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJsb2FkZWQiLCJ0b3RhbCIsInJlc3BvbnNlSGVhZGVycyIsInNwbGl0IiwicmVkdWNlIiwiaGVhZGVycyIsImxpbmUiLCJpbmRleCIsImluZGV4T2YiLCJzbGljZSIsInJlc3BvbnNlIl0sIm1hcHBpbmdzIjoiT0FDU0EsY0FBd0MsS0FBbEIseUJBZ0JsQkMsYUErQ1hDLFlBSWtCQyxFQU1BQyxFQUlBQyxFQWNBQyxFQUF5QixpQkF4QnpCQyxLQUFBSixjQUFBQSxFQU1BSSxLQUFBSCxJQUFBQSxFQUlBRyxLQUFBRixRQUFBQSxFQWNBRSxLQUFBRCxLQUFBQSxFQUVoQixHQUFNLENBQUVFLE9BQUFBLEVBQVFDLGFBQUFBLENBQVksRUFBS0wsRUFXM0JNLEdBVk5ILEtBQUtDLE9BQVNBLEdBQVUsRUFDeEJELEtBQUtFLGFBQWVBLEdBQWdCLEdBU2pCTCxFQUFJTyxzQkFBcUIsR0FjdEMsQ0FBRUMsT0FBQUEsRUFBUUMsTUFBQUEsQ0FBSyxHQWJyQk4sS0FBS08sZ0JBQWtCSixFQUVuQkEsRUFBV0ssTUFBTSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsRUFBaUNDLEtBSTlELElBQU1DLEVBQVFELEVBQUtFLFFBQVEsSUFBSSxFQUUvQixPQURBSCxFQUFRQyxFQUFLRyxNQUFNLEVBQUdGLENBQUssR0FBS0QsRUFBS0csTUFBTUYsRUFBUSxDQUFDLEVBQzdDRixDQUNULEVBQUcsRUFBRSxFQUNMLEdBRUpWLEtBQUtlLFNBQVd0QixlQUFlSSxDQUFHLEVBQ1JELEdBQzFCSSxLQUFLSyxPQUFTQSxFQUNkTCxLQUFLTSxNQUFRQSxDQUNmLEMsUUF6R1daLFkiLCJmaWxlIjoibm9kZV9tb2R1bGVzL3J4anMvc3JjL2ludGVybmFsL2FqYXgvQWpheFJlc3BvbnNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWpheFJlcXVlc3QsIEFqYXhSZXNwb25zZVR5cGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IGdldFhIUlJlc3BvbnNlIH0gZnJvbSAnLi9nZXRYSFJSZXNwb25zZSc7XG5cbi8qKlxuICogQSBub3JtYWxpemVkIHJlc3BvbnNlIGZyb20gYW4gQUpBWCByZXF1ZXN0LiBUbyBnZXQgdGhlIGRhdGEgZnJvbSB0aGUgcmVzcG9uc2UsXG4gKiB5b3Ugd2lsbCB3YW50IHRvIHJlYWQgdGhlIGByZXNwb25zZWAgcHJvcGVydHkuXG4gKlxuICogLSBETyBOT1QgY3JlYXRlIGluc3RhbmNlcyBvZiB0aGlzIGNsYXNzIGRpcmVjdGx5LlxuICogLSBETyBOT1Qgc3ViY2xhc3MgdGhpcyBjbGFzcy5cbiAqXG4gKiBJdCBpcyBhZHZpc2VkIG5vdCB0byBob2xkIHRoaXMgb2JqZWN0IGluIG1lbW9yeSwgYXMgaXQgaGFzIGEgcmVmZXJlbmNlIHRvXG4gKiB0aGUgb3JpZ2luYWwgWEhSIHVzZWQgdG8gbWFrZSB0aGUgcmVxdWVzdCwgYXMgd2VsbCBhcyBwcm9wZXJ0aWVzIGNvbnRhaW5pbmdcbiAqIHJlcXVlc3QgYW5kIHJlc3BvbnNlIGRhdGEuXG4gKlxuICogQHNlZSB7QGxpbmsgYWpheH1cbiAqIEBzZWUge0BsaW5rIEFqYXhDb25maWd9XG4gKi9cbmV4cG9ydCBjbGFzcyBBamF4UmVzcG9uc2U8VD4ge1xuICAvKiogVGhlIEhUVFAgc3RhdHVzIGNvZGUgKi9cbiAgcmVhZG9ubHkgc3RhdHVzOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSByZXNwb25zZSBkYXRhLCBpZiBhbnkuIE5vdGUgdGhhdCB0aGlzIHdpbGwgYXV0b21hdGljYWxseSBiZSBjb252ZXJ0ZWQgdG8gdGhlIHByb3BlciB0eXBlXG4gICAqL1xuICByZWFkb25seSByZXNwb25zZTogVDtcblxuICAvKipcbiAgICogVGhlIHJlc3BvbnNlVHlwZSBzZXQgb24gdGhlIHJlcXVlc3QuIChGb3IgZXhhbXBsZTogYFwiXCJgLCBgXCJhcnJheWJ1ZmZlclwiYCwgYFwiYmxvYlwiYCwgYFwiZG9jdW1lbnRcImAsIGBcImpzb25cImAsIG9yIGBcInRleHRcImApXG4gICAqIEBkZXByZWNhdGVkIFRoZXJlIGlzbid0IG11Y2ggcmVhc29uIHRvIGV4YW1pbmUgdGhpcy4gSXQncyB0aGUgc2FtZSByZXNwb25zZVR5cGUgc2V0IChvciBkZWZhdWx0ZWQpIG9uIHRoZSBhamF4IGNvbmZpZy5cbiAgICogSWYgeW91IHJlYWxseSBuZWVkIHRvIGV4YW1pbmUgdGhpcyB2YWx1ZSwgeW91IGNhbiBjaGVjayBpdCBvbiB0aGUgYHJlcXVlc3RgIG9yIHRoZSBgeGhyYC4gV2lsbCBiZSByZW1vdmVkIGluIHY4LlxuICAgKi9cbiAgcmVhZG9ubHkgcmVzcG9uc2VUeXBlOiBYTUxIdHRwUmVxdWVzdFJlc3BvbnNlVHlwZTtcblxuICAvKipcbiAgICogVGhlIHRvdGFsIG51bWJlciBvZiBieXRlcyBsb2FkZWQgc28gZmFyLiBUbyBiZSB1c2VkIHdpdGgge0BsaW5rIHRvdGFsfSB3aGlsZVxuICAgKiBjYWxjdWxhdGluZyBwcm9ncmVzcy4gKFlvdSB3aWxsIHdhbnQgdG8gc2V0IHtAbGluayBpbmNsdWRlRG93bmxvYWRQcm9ncmVzc30gb3JcbiAgICoge0BsaW5rIGluY2x1ZGVEb3dubG9hZFByb2dyZXNzfSlcbiAgICovXG4gIHJlYWRvbmx5IGxvYWRlZDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgdG90YWwgbnVtYmVyIG9mIGJ5dGVzIHRvIGJlIGxvYWRlZC4gVG8gYmUgdXNlZCB3aXRoIHtAbGluayBsb2FkZWR9IHdoaWxlXG4gICAqIGNhbGN1bGF0aW5nIHByb2dyZXNzLiAoWW91IHdpbGwgd2FudCB0byBzZXQge0BsaW5rIGluY2x1ZGVEb3dubG9hZFByb2dyZXNzfSBvclxuICAgKiB7QGxpbmsgaW5jbHVkZURvd25sb2FkUHJvZ3Jlc3N9KVxuICAgKi9cbiAgcmVhZG9ubHkgdG90YWw6IG51bWJlcjtcblxuICAvKipcbiAgICogQSBkaWN0aW9uYXJ5IG9mIHRoZSByZXNwb25zZSBoZWFkZXJzLlxuICAgKi9cbiAgcmVhZG9ubHkgcmVzcG9uc2VIZWFkZXJzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBBIG5vcm1hbGl6ZWQgcmVzcG9uc2UgZnJvbSBhbiBBSkFYIHJlcXVlc3QuIFRvIGdldCB0aGUgZGF0YSBmcm9tIHRoZSByZXNwb25zZSxcbiAgICogeW91IHdpbGwgd2FudCB0byByZWFkIHRoZSBgcmVzcG9uc2VgIHByb3BlcnR5LlxuICAgKlxuICAgKiAtIERPIE5PVCBjcmVhdGUgaW5zdGFuY2VzIG9mIHRoaXMgY2xhc3MgZGlyZWN0bHkuXG4gICAqIC0gRE8gTk9UIHN1YmNsYXNzIHRoaXMgY2xhc3MuXG4gICAqXG4gICAqIEBwYXJhbSBvcmlnaW5hbEV2ZW50IFRoZSBvcmlnaW5hbCBldmVudCBvYmplY3QgZnJvbSB0aGUgWEhSIGBvbmxvYWRgIGV2ZW50LlxuICAgKiBAcGFyYW0geGhyIFRoZSBgWE1MSHR0cFJlcXVlc3RgIG9iamVjdCB1c2VkIHRvIG1ha2UgdGhlIHJlcXVlc3QuIFRoaXMgaXMgdXNlZnVsIGZvciBleGFtaW5pbmcgc3RhdHVzIGNvZGUsIGV0Yy5cbiAgICogQHBhcmFtIHJlcXVlc3QgVGhlIHJlcXVlc3Qgc2V0dGluZ3MgdXNlZCB0byBtYWtlIHRoZSBIVFRQIHJlcXVlc3QuXG4gICAqIEBwYXJhbSB0eXBlIFRoZSB0eXBlIG9mIHRoZSBldmVudCBlbWl0dGVkIGJ5IHRoZSB7QGxpbmsgYWpheH0gT2JzZXJ2YWJsZVxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgLyoqXG4gICAgICogVGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdCBmcm9tIHRoZSByYXcgWEhSIGV2ZW50LlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBvcmlnaW5hbEV2ZW50OiBQcm9ncmVzc0V2ZW50LFxuICAgIC8qKlxuICAgICAqIFRoZSBYTUxIdHRwUmVxdWVzdCBvYmplY3QgdXNlZCB0byBtYWtlIHRoZSByZXF1ZXN0LlxuICAgICAqIE5PVEU6IEl0IGlzIGFkdmlzZWQgbm90IHRvIGhvbGQgdGhpcyBpbiBtZW1vcnksIGFzIGl0IHdpbGwgcmV0YWluIHJlZmVyZW5jZXMgdG8gYWxsIG9mIGl0J3MgZXZlbnQgaGFuZGxlcnNcbiAgICAgKiBhbmQgbWFueSBvdGhlciB0aGluZ3MgcmVsYXRlZCB0byB0aGUgcmVxdWVzdC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgeGhyOiBYTUxIdHRwUmVxdWVzdCxcbiAgICAvKipcbiAgICAgKiBUaGUgcmVxdWVzdCBwYXJhbWV0ZXJzIHVzZWQgdG8gbWFrZSB0aGUgSFRUUCByZXF1ZXN0LlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSByZXF1ZXN0OiBBamF4UmVxdWVzdCxcbiAgICAvKipcbiAgICAgKiBUaGUgZXZlbnQgdHlwZS4gVGhpcyBjYW4gYmUgdXNlZCB0byBkaXNjZXJuIGJldHdlZW4gZGlmZmVyZW50IGV2ZW50c1xuICAgICAqIGlmIHlvdSdyZSB1c2luZyBwcm9ncmVzcyBldmVudHMgd2l0aCB7QGxpbmsgaW5jbHVkZURvd25sb2FkUHJvZ3Jlc3N9IG9yXG4gICAgICoge0BsaW5rIGluY2x1ZGVVcGxvYWRQcm9ncmVzc30gc2V0dGluZ3MgaW4ge0BsaW5rIEFqYXhDb25maWd9LlxuICAgICAqXG4gICAgICogVGhlIGV2ZW50IHR5cGUgY29uc2lzdHMgb2YgdHdvIHBhcnRzOiB0aGUge0BsaW5rIEFqYXhEaXJlY3Rpb259IGFuZCB0aGVcbiAgICAgKiB0aGUgZXZlbnQgdHlwZS4gTWVyZ2VkIHdpdGggYF9gLCB0aGV5IGZvcm0gdGhlIGB0eXBlYCBzdHJpbmcuIFRoZVxuICAgICAqIGRpcmVjdGlvbiBjYW4gYmUgYW4gYHVwbG9hZGAgb3IgYSBgZG93bmxvYWRgIGRpcmVjdGlvbiwgd2hpbGUgYW4gZXZlbnQgY2FuXG4gICAgICogYmUgYGxvYWRzdGFydGAsIGBwcm9ncmVzc2Agb3IgYGxvYWRgLlxuICAgICAqXG4gICAgICogYGRvd25sb2FkX2xvYWRgIGlzIHRoZSB0eXBlIG9mIGV2ZW50IHdoZW4gZG93bmxvYWQgaGFzIGZpbmlzaGVkIGFuZCB0aGVcbiAgICAgKiByZXNwb25zZSBpcyBhdmFpbGFibGUuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IHR5cGU6IEFqYXhSZXNwb25zZVR5cGUgPSAnZG93bmxvYWRfbG9hZCdcbiAgKSB7XG4gICAgY29uc3QgeyBzdGF0dXMsIHJlc3BvbnNlVHlwZSB9ID0geGhyO1xuICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzID8/IDA7XG4gICAgdGhpcy5yZXNwb25zZVR5cGUgPSByZXNwb25zZVR5cGUgPz8gJyc7XG5cbiAgICAvLyBQYXJzZSB0aGUgcmVzcG9uc2UgaGVhZGVycyBpbiBhZHZhbmNlIGZvciB0aGUgdXNlci4gVGhlcmUncyByZWFsbHlcbiAgICAvLyBub3QgYSBncmVhdCB3YXkgdG8gZ2V0IGFsbCBvZiB0aGVtLiBTbyB3ZSBuZWVkIHRvIHBhcnNlIHRoZSBoZWFkZXIgc3RyaW5nXG4gICAgLy8gd2UgZ2V0IGJhY2suIEl0IGNvbWVzIGluIGEgc2ltcGxlIGVub3VnaCBmb3JtYXQ6XG4gICAgLy9cbiAgICAvLyBoZWFkZXItbmFtZTogdmFsdWUgaGVyZVxuICAgIC8vIGNvbnRlbnQtdHlwZTogYXBwbGljYXRpb24vanNvblxuICAgIC8vIG90aGVyLWhlYWRlci1oZXJlOiBzb21lLCBvdGhlciwgdmFsdWVzLCBvciwgd2hhdGV2ZXJcbiAgICBjb25zdCBhbGxIZWFkZXJzID0geGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpO1xuICAgIHRoaXMucmVzcG9uc2VIZWFkZXJzID0gYWxsSGVhZGVyc1xuICAgICAgPyAvLyBTcGxpdCB0aGUgaGVhZGVyIHRleHQgaW50byBsaW5lc1xuICAgICAgICBhbGxIZWFkZXJzLnNwbGl0KCdcXG4nKS5yZWR1Y2UoKGhlYWRlcnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4sIGxpbmUpID0+IHtcbiAgICAgICAgICAvLyBTcGxpdCB0aGUgbGluZXMgb24gdGhlIGZpcnN0IFwiOiBcIiBhc1xuICAgICAgICAgIC8vIFwia2V5OiB2YWx1ZVwiLiBOb3RlIHRoYXQgdGhlIHZhbHVlIGNvdWxkXG4gICAgICAgICAgLy8gdGVjaG5pY2FsbHkgaGF2ZSBhIFwiOiBcIiBpbiBpdC5cbiAgICAgICAgICBjb25zdCBpbmRleCA9IGxpbmUuaW5kZXhPZignOiAnKTtcbiAgICAgICAgICBoZWFkZXJzW2xpbmUuc2xpY2UoMCwgaW5kZXgpXSA9IGxpbmUuc2xpY2UoaW5kZXggKyAyKTtcbiAgICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICAgICAgfSwge30pXG4gICAgICA6IHt9O1xuXG4gICAgdGhpcy5yZXNwb25zZSA9IGdldFhIUlJlc3BvbnNlKHhocik7XG4gICAgY29uc3QgeyBsb2FkZWQsIHRvdGFsIH0gPSBvcmlnaW5hbEV2ZW50O1xuICAgIHRoaXMubG9hZGVkID0gbG9hZGVkO1xuICAgIHRoaXMudG90YWwgPSB0b3RhbDtcbiAgfVxufVxuIl19
