import{Subscriber}from"../Subscriber";function createOperatorSubscriber(r,e,s,t,i){return new OperatorSubscriber(r,e,s,t,i)}class OperatorSubscriber extends Subscriber{constructor(e,s,r,t,i,c){super(e),this.onFinalize=i,this.shouldUnsubscribe=c,this._next=s?function(r){try{s(r)}catch(r){e.error(r)}}:super._next,this._error=t?function(r){try{t(r)}catch(r){e.error(r)}finally{this.unsubscribe()}}:super._error,this._complete=r?function(){try{r()}catch(r){e.error(r)}finally{this.unsubscribe()}}:super._complete}unsubscribe(){var r;this.shouldUnsubscribe&&!this.shouldUnsubscribe()||(r=this.closed,super.unsubscribe(),r)||this.onFinalize?.()}}export{createOperatorSubscriber,OperatorSubscriber};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
