import{operate}from"../util/lift";import{noop}from"../util/noop";import{createOperatorSubscriber}from"./OperatorSubscriber";import{innerFrom}from"../observable/innerFrom";function debounce(b){return operate((r,e)=>{let o=!1,n=null,t=null,u=()=>{var r;t?.unsubscribe(),t=null,o&&(o=!1,r=n,n=null,e.next(r))};r.subscribe(createOperatorSubscriber(e,r=>{t?.unsubscribe(),o=!0,n=r,t=createOperatorSubscriber(e,u,noop),innerFrom(b(r)).subscribe(t)},()=>{u(),e.complete()},void 0,()=>{n=t=null}))})}export{debounce};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
