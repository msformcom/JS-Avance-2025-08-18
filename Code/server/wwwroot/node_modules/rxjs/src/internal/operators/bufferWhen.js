import{operate}from"../util/lift";import{noop}from"../util/noop";import{createOperatorSubscriber}from"./OperatorSubscriber";import{innerFrom}from"../observable/innerFrom";function bufferWhen(i){return operate((r,e)=>{let o=null,t=null,n=()=>{t?.unsubscribe();var r=o;o=[],r&&e.next(r),innerFrom(i()).subscribe(t=createOperatorSubscriber(e,n,noop))};n(),r.subscribe(createOperatorSubscriber(e,r=>o?.push(r),()=>{o&&e.next(o),e.complete()},void 0,()=>o=t=null))})}export{bufferWhen};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvYnVmZmVyV2hlbi50cyJdLCJuYW1lcyI6WyJvcGVyYXRlIiwibm9vcCIsImNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlciIsImlubmVyRnJvbSIsImJ1ZmZlcldoZW4iLCJjbG9zaW5nU2VsZWN0b3IiLCJzb3VyY2UiLCJzdWJzY3JpYmVyIiwibGV0IiwiYnVmZmVyIiwiY2xvc2luZ1N1YnNjcmliZXIiLCJvcGVuQnVmZmVyIiwidW5zdWJzY3JpYmUiLCJiIiwibmV4dCIsInN1YnNjcmliZSIsInB1c2giLCJ2YWx1ZSIsImNvbXBsZXRlIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiT0FFU0EsT0FBNkIsS0FBZCxzQkFDZkMsSUFBMEIsS0FBZCxzQkFDWkMsd0JBQXNELEtBQXRCLDhCQUNoQ0MsU0FBMEMsS0FBekIsMEJBd0NwQixTQUFVQyxXQUFjQyxHQUM1QixPQUFPTCxRQUFRLENBQUNNLEVBQVFDLEtBRXRCQyxJQUFJQyxFQUFxQixLQUlyQkMsRUFBMEMsS0FNeENDLEVBQWEsS0FHakJELEdBQW1CRSxZQUFXLEVBRTlCLElBQU1DLEVBQUlKLEVBQ1ZBLEVBQVMsR0FDVEksR0FBS04sRUFBV08sS0FBS0QsQ0FBQyxFQUd0QlYsVUFBVUUsRUFBZSxDQUFFLEVBQUVVLFVBQVdMLEVBQW9CUix5QkFBeUJLLEVBQVlJLEVBQVlWLElBQUksQ0FBRSxDQUNySCxFQUdBVSxFQUFVLEVBR1ZMLEVBQU9TLFVBQ0xiLHlCQUNFSyxFQUVBLEdBQVdFLEdBQVFPLEtBQUtDLENBQUssRUFHN0IsS0FDRVIsR0FBVUYsRUFBV08sS0FBS0wsQ0FBTSxFQUNoQ0YsRUFBV1csU0FBUSxDQUNyQixFQUVBQyxLQUFBQSxFQUVBLElBQU9WLEVBQVNDLEVBQW9CLElBQU0sQ0FDM0MsQ0FFTCxDQUFDLENBQ0gsUUFoRGdCTixVQWdEaEIiLCJmaWxlIjoibm9kZV9tb2R1bGVzL3J4anMvc3JjL2ludGVybmFsL29wZXJhdG9ycy9idWZmZXJXaGVuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3Vic2NyaWJlciB9IGZyb20gJy4uL1N1YnNjcmliZXInO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZUlucHV0LCBPcGVyYXRvckZ1bmN0aW9uIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgb3BlcmF0ZSB9IGZyb20gJy4uL3V0aWwvbGlmdCc7XG5pbXBvcnQgeyBub29wIH0gZnJvbSAnLi4vdXRpbC9ub29wJztcbmltcG9ydCB7IGNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlciB9IGZyb20gJy4vT3BlcmF0b3JTdWJzY3JpYmVyJztcbmltcG9ydCB7IGlubmVyRnJvbSB9IGZyb20gJy4uL29ic2VydmFibGUvaW5uZXJGcm9tJztcblxuLyoqXG4gKiBCdWZmZXJzIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSB2YWx1ZXMsIHVzaW5nIGEgZmFjdG9yeSBmdW5jdGlvbiBvZiBjbG9zaW5nXG4gKiBPYnNlcnZhYmxlcyB0byBkZXRlcm1pbmUgd2hlbiB0byBjbG9zZSwgZW1pdCwgYW5kIHJlc2V0IHRoZSBidWZmZXIuXG4gKlxuICogPHNwYW4gY2xhc3M9XCJpbmZvcm1hbFwiPkNvbGxlY3RzIHZhbHVlcyBmcm9tIHRoZSBwYXN0IGFzIGFuIGFycmF5LiBXaGVuIGl0XG4gKiBzdGFydHMgY29sbGVjdGluZyB2YWx1ZXMsIGl0IGNhbGxzIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGFuIE9ic2VydmFibGUgdGhhdFxuICogdGVsbHMgd2hlbiB0byBjbG9zZSB0aGUgYnVmZmVyIGFuZCByZXN0YXJ0IGNvbGxlY3RpbmcuPC9zcGFuPlxuICpcbiAqICFbXShidWZmZXJXaGVuLnN2ZylcbiAqXG4gKiBPcGVucyBhIGJ1ZmZlciBpbW1lZGlhdGVseSwgdGhlbiBjbG9zZXMgdGhlIGJ1ZmZlciB3aGVuIHRoZSBvYnNlcnZhYmxlXG4gKiByZXR1cm5lZCBieSBjYWxsaW5nIGBjbG9zaW5nU2VsZWN0b3JgIGZ1bmN0aW9uIGVtaXRzIGEgdmFsdWUuIFdoZW4gaXQgY2xvc2VzXG4gKiB0aGUgYnVmZmVyLCBpdCBpbW1lZGlhdGVseSBvcGVucyBhIG5ldyBidWZmZXIgYW5kIHJlcGVhdHMgdGhlIHByb2Nlc3MuXG4gKlxuICogIyMgRXhhbXBsZVxuICpcbiAqIEVtaXQgYW4gYXJyYXkgb2YgdGhlIGxhc3QgY2xpY2tzIGV2ZXJ5IFsxLTVdIHJhbmRvbSBzZWNvbmRzXG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IGZyb21FdmVudCwgYnVmZmVyV2hlbiwgaW50ZXJ2YWwgfSBmcm9tICdyeGpzJztcbiAqXG4gKiBjb25zdCBjbGlja3MgPSBmcm9tRXZlbnQoZG9jdW1lbnQsICdjbGljaycpO1xuICogY29uc3QgYnVmZmVyZWQgPSBjbGlja3MucGlwZShcbiAqICAgYnVmZmVyV2hlbigoKSA9PiBpbnRlcnZhbCgxMDAwICsgTWF0aC5yYW5kb20oKSAqIDQwMDApKVxuICogKTtcbiAqIGJ1ZmZlcmVkLnN1YnNjcmliZSh4ID0+IGNvbnNvbGUubG9nKHgpKTtcbiAqIGBgYFxuICpcbiAqIEBzZWUge0BsaW5rIGJ1ZmZlcn1cbiAqIEBzZWUge0BsaW5rIGJ1ZmZlckNvdW50fVxuICogQHNlZSB7QGxpbmsgYnVmZmVyVGltZX1cbiAqIEBzZWUge0BsaW5rIGJ1ZmZlclRvZ2dsZX1cbiAqIEBzZWUge0BsaW5rIHdpbmRvd1doZW59XG4gKlxuICogQHBhcmFtIGNsb3NpbmdTZWxlY3RvciBBIGZ1bmN0aW9uIHRoYXQgdGFrZXMgbm8gYXJndW1lbnRzIGFuZCByZXR1cm5zIGFuXG4gKiBPYnNlcnZhYmxlIHRoYXQgc2lnbmFscyBidWZmZXIgY2xvc3VyZS5cbiAqIEByZXR1cm4gQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gT2JzZXJ2YWJsZSBvZiBhcnJheXMgb2YgYnVmZmVyZWQgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYnVmZmVyV2hlbjxUPihjbG9zaW5nU2VsZWN0b3I6ICgpID0+IE9ic2VydmFibGVJbnB1dDxhbnk+KTogT3BlcmF0b3JGdW5jdGlvbjxULCBUW10+IHtcbiAgcmV0dXJuIG9wZXJhdGUoKHNvdXJjZSwgc3Vic2NyaWJlcikgPT4ge1xuICAgIC8vIFRoZSBidWZmZXIgd2Uga2VlcCBhbmQgZW1pdC5cbiAgICBsZXQgYnVmZmVyOiBUW10gfCBudWxsID0gbnVsbDtcbiAgICAvLyBBIHJlZmVyZW5jZSB0byB0aGUgc3Vic2NyaWJlciB1c2VkIHRvIHN1YnNjcmliZSB0b1xuICAgIC8vIHRoZSBjbG9zaW5nIG5vdGlmaWVyLiBXZSBuZWVkIHRvIGhvbGQgdGhpcyBzbyB3ZSBjYW5cbiAgICAvLyBlbmQgdGhlIHN1YnNjcmlwdGlvbiBhZnRlciB0aGUgZmlyc3Qgbm90aWZpY2F0aW9uLlxuICAgIGxldCBjbG9zaW5nU3Vic2NyaWJlcjogU3Vic2NyaWJlcjxUPiB8IG51bGwgPSBudWxsO1xuXG4gICAgLy8gRW5kcyB0aGUgcHJldmlvdXMgY2xvc2luZyBub3RpZmllciBzdWJzY3JpcHRpb24sIHNvIGl0XG4gICAgLy8gdGVybWluYXRlcyBhZnRlciB0aGUgZmlyc3QgZW1pc3Npb24sIHRoZW4gZW1pdHNcbiAgICAvLyB0aGUgY3VycmVudCBidWZmZXIgIGlmIHRoZXJlIGlzIG9uZSwgc3RhcnRzIGEgbmV3IGJ1ZmZlciwgYW5kIHN0YXJ0cyBhXG4gICAgLy8gbmV3IGNsb3Npbmcgbm90aWZpZXIuXG4gICAgY29uc3Qgb3BlbkJ1ZmZlciA9ICgpID0+IHtcbiAgICAgIC8vIE1ha2Ugc3VyZSB0byBmaW5hbGl6ZSB0aGUgY2xvc2luZyBzdWJzY3JpcHRpb24sIHdlIG9ubHkgY2FyZWRcbiAgICAgIC8vIGFib3V0IG9uZSBub3RpZmljYXRpb24uXG4gICAgICBjbG9zaW5nU3Vic2NyaWJlcj8udW5zdWJzY3JpYmUoKTtcbiAgICAgIC8vIGVtaXQgdGhlIGJ1ZmZlciBpZiB3ZSBoYXZlIG9uZSwgYW5kIHN0YXJ0IGEgbmV3IGJ1ZmZlci5cbiAgICAgIGNvbnN0IGIgPSBidWZmZXI7XG4gICAgICBidWZmZXIgPSBbXTtcbiAgICAgIGIgJiYgc3Vic2NyaWJlci5uZXh0KGIpO1xuXG4gICAgICAvLyBHZXQgYSBuZXcgY2xvc2luZyBub3RpZmllciBhbmQgc3Vic2NyaWJlIHRvIGl0LlxuICAgICAgaW5uZXJGcm9tKGNsb3NpbmdTZWxlY3RvcigpKS5zdWJzY3JpYmUoKGNsb3NpbmdTdWJzY3JpYmVyID0gY3JlYXRlT3BlcmF0b3JTdWJzY3JpYmVyKHN1YnNjcmliZXIsIG9wZW5CdWZmZXIsIG5vb3ApKSk7XG4gICAgfTtcblxuICAgIC8vIFN0YXJ0IHRoZSBmaXJzdCBidWZmZXIuXG4gICAgb3BlbkJ1ZmZlcigpO1xuXG4gICAgLy8gU3Vic2NyaWJlIHRvIG91ciBzb3VyY2UuXG4gICAgc291cmNlLnN1YnNjcmliZShcbiAgICAgIGNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlcihcbiAgICAgICAgc3Vic2NyaWJlcixcbiAgICAgICAgLy8gQWRkIGV2ZXJ5IG5ldyB2YWx1ZSB0byB0aGUgY3VycmVudCBidWZmZXIuXG4gICAgICAgICh2YWx1ZSkgPT4gYnVmZmVyPy5wdXNoKHZhbHVlKSxcbiAgICAgICAgLy8gV2hlbiB3ZSBjb21wbGV0ZSwgZW1pdCB0aGUgYnVmZmVyIGlmIHdlIGhhdmUgb25lLFxuICAgICAgICAvLyB0aGVuIGNvbXBsZXRlIHRoZSByZXN1bHQuXG4gICAgICAgICgpID0+IHtcbiAgICAgICAgICBidWZmZXIgJiYgc3Vic2NyaWJlci5uZXh0KGJ1ZmZlcik7XG4gICAgICAgICAgc3Vic2NyaWJlci5jb21wbGV0ZSgpO1xuICAgICAgICB9LFxuICAgICAgICAvLyBQYXNzIGFsbCBlcnJvcnMgdGhyb3VnaCB0byBjb25zdW1lci5cbiAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICAvLyBSZWxlYXNlIG1lbW9yeSBvbiBmaW5hbGl6YXRpb25cbiAgICAgICAgKCkgPT4gKGJ1ZmZlciA9IGNsb3NpbmdTdWJzY3JpYmVyID0gbnVsbCEpXG4gICAgICApXG4gICAgKTtcbiAgfSk7XG59XG4iXX0=
