import{operate}from"../util/lift";import{createOperatorSubscriber}from"./OperatorSubscriber";import{noop}from"../util/noop";import{innerFrom}from"../observable/innerFrom";function distinct(i,e){return operate((r,o)=>{let t=new Set;r.subscribe(createOperatorSubscriber(o,r=>{var e=i?i(r):r;t.has(e)||(t.add(e),o.next(r))})),e&&innerFrom(e).subscribe(createOperatorSubscriber(o,()=>t.clear(),noop))})}export{distinct};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvZGlzdGluY3QudHMiXSwibmFtZXMiOlsib3BlcmF0ZSIsImNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlciIsIm5vb3AiLCJpbm5lckZyb20iLCJkaXN0aW5jdCIsImtleVNlbGVjdG9yIiwiZmx1c2hlcyIsInNvdXJjZSIsInN1YnNjcmliZXIiLCJkaXN0aW5jdEtleXMiLCJTZXQiLCJzdWJzY3JpYmUiLCJrZXkiLCJ2YWx1ZSIsImhhcyIsImFkZCIsIm5leHQiLCJjbGVhciJdLCJtYXBwaW5ncyI6Ik9BQ1NBLE9BQTZCLEtBQWQsc0JBQ2ZDLHdCQUFzRCxLQUF0Qiw4QkFDaENDLElBQTBCLEtBQWQsc0JBQ1pDLFNBQTBDLEtBQXpCLDBCQTJEcEIsU0FBVUMsU0FBZUMsRUFBK0JDLEdBQzVELE9BQU9OLFFBQVEsQ0FBQ08sRUFBUUMsS0FDdEIsSUFBTUMsRUFBZSxJQUFJQyxJQUN6QkgsRUFBT0ksVUFDTFYseUJBQXlCTyxFQUFZLElBQ25DLElBQU1JLEVBQU1QLEVBQWNBLEVBQVlRLENBQUssRUFBSUEsRUFDMUNKLEVBQWFLLElBQUlGLENBQUcsSUFDdkJILEVBQWFNLElBQUlILENBQUcsRUFDcEJKLEVBQVdRLEtBQUtILENBQUssRUFFekIsQ0FBQyxDQUFDLEVBR0pQLEdBQVdILFVBQVVHLENBQU8sRUFBRUssVUFBVVYseUJBQXlCTyxFQUFZLElBQU1DLEVBQWFRLE1BQUssRUFBSWYsSUFBSSxDQUFDLENBQ2hILENBQUMsQ0FDSCxRQWZnQkUsUUFlaEIiLCJmaWxlIjoibm9kZV9tb2R1bGVzL3J4anMvc3JjL2ludGVybmFsL29wZXJhdG9ycy9kaXN0aW5jdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbiwgT2JzZXJ2YWJsZUlucHV0IH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgb3BlcmF0ZSB9IGZyb20gJy4uL3V0aWwvbGlmdCc7XG5pbXBvcnQgeyBjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIgfSBmcm9tICcuL09wZXJhdG9yU3Vic2NyaWJlcic7XG5pbXBvcnQgeyBub29wIH0gZnJvbSAnLi4vdXRpbC9ub29wJztcbmltcG9ydCB7IGlubmVyRnJvbSB9IGZyb20gJy4uL29ic2VydmFibGUvaW5uZXJGcm9tJztcblxuLyoqXG4gKiBSZXR1cm5zIGFuIE9ic2VydmFibGUgdGhhdCBlbWl0cyBhbGwgaXRlbXMgZW1pdHRlZCBieSB0aGUgc291cmNlIE9ic2VydmFibGUgdGhhdCBhcmUgZGlzdGluY3QgYnkgY29tcGFyaXNvbiBmcm9tIHByZXZpb3VzIGl0ZW1zLlxuICpcbiAqIElmIGEgYGtleVNlbGVjdG9yYCBmdW5jdGlvbiBpcyBwcm92aWRlZCwgdGhlbiBpdCB3aWxsIHByb2plY3QgZWFjaCB2YWx1ZSBmcm9tIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZSBpbnRvIGEgbmV3IHZhbHVlIHRoYXQgaXQgd2lsbFxuICogY2hlY2sgZm9yIGVxdWFsaXR5IHdpdGggcHJldmlvdXNseSBwcm9qZWN0ZWQgdmFsdWVzLiBJZiB0aGUgYGtleVNlbGVjdG9yYCBmdW5jdGlvbiBpcyBub3QgcHJvdmlkZWQsIGl0IHdpbGwgdXNlIGVhY2ggdmFsdWUgZnJvbSB0aGVcbiAqIHNvdXJjZSBvYnNlcnZhYmxlIGRpcmVjdGx5IHdpdGggYW4gZXF1YWxpdHkgY2hlY2sgYWdhaW5zdCBwcmV2aW91cyB2YWx1ZXMuXG4gKlxuICogSW4gSmF2YVNjcmlwdCBydW50aW1lcyB0aGF0IHN1cHBvcnQgYFNldGAsIHRoaXMgb3BlcmF0b3Igd2lsbCB1c2UgYSBgU2V0YCB0byBpbXByb3ZlIHBlcmZvcm1hbmNlIG9mIHRoZSBkaXN0aW5jdCB2YWx1ZSBjaGVja2luZy5cbiAqXG4gKiBJbiBvdGhlciBydW50aW1lcywgdGhpcyBvcGVyYXRvciB3aWxsIHVzZSBhIG1pbmltYWwgaW1wbGVtZW50YXRpb24gb2YgYFNldGAgdGhhdCByZWxpZXMgb24gYW4gYEFycmF5YCBhbmQgYGluZGV4T2ZgIHVuZGVyIHRoZVxuICogaG9vZCwgc28gcGVyZm9ybWFuY2Ugd2lsbCBkZWdyYWRlIGFzIG1vcmUgdmFsdWVzIGFyZSBjaGVja2VkIGZvciBkaXN0aW5jdGlvbi4gRXZlbiBpbiBuZXdlciBicm93c2VycywgYSBsb25nLXJ1bm5pbmcgYGRpc3RpbmN0YFxuICogdXNlIG1pZ2h0IHJlc3VsdCBpbiBtZW1vcnkgbGVha3MuIFRvIGhlbHAgYWxsZXZpYXRlIHRoaXMgaW4gc29tZSBzY2VuYXJpb3MsIGFuIG9wdGlvbmFsIGBmbHVzaGVzYCBwYXJhbWV0ZXIgaXMgYWxzbyBwcm92aWRlZCBzb1xuICogdGhhdCB0aGUgaW50ZXJuYWwgYFNldGAgY2FuIGJlIFwiZmx1c2hlZFwiLCBiYXNpY2FsbHkgY2xlYXJpbmcgaXQgb2YgdmFsdWVzLlxuICpcbiAqICMjIEV4YW1wbGVzXG4gKlxuICogQSBzaW1wbGUgZXhhbXBsZSB3aXRoIG51bWJlcnNcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgb2YsIGRpc3RpbmN0IH0gZnJvbSAncnhqcyc7XG4gKlxuICogb2YoMSwgMSwgMiwgMiwgMiwgMSwgMiwgMywgNCwgMywgMiwgMSlcbiAqICAgLnBpcGUoZGlzdGluY3QoKSlcbiAqICAgLnN1YnNjcmliZSh4ID0+IGNvbnNvbGUubG9nKHgpKTtcbiAqXG4gKiAvLyBPdXRwdXRzXG4gKiAvLyAxXG4gKiAvLyAyXG4gKiAvLyAzXG4gKiAvLyA0XG4gKiBgYGBcbiAqXG4gKiBBbiBleGFtcGxlIHVzaW5nIHRoZSBga2V5U2VsZWN0b3JgIGZ1bmN0aW9uXG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IG9mLCBkaXN0aW5jdCB9IGZyb20gJ3J4anMnO1xuICpcbiAqIG9mKFxuICogICB7IGFnZTogNCwgbmFtZTogJ0Zvbyd9LFxuICogICB7IGFnZTogNywgbmFtZTogJ0Jhcid9LFxuICogICB7IGFnZTogNSwgbmFtZTogJ0Zvbyd9XG4gKiApXG4gKiAucGlwZShkaXN0aW5jdCgoeyBuYW1lIH0pID0+IG5hbWUpKVxuICogLnN1YnNjcmliZSh4ID0+IGNvbnNvbGUubG9nKHgpKTtcbiAqXG4gKiAvLyBPdXRwdXRzXG4gKiAvLyB7IGFnZTogNCwgbmFtZTogJ0ZvbycgfVxuICogLy8geyBhZ2U6IDcsIG5hbWU6ICdCYXInIH1cbiAqIGBgYFxuICogQHNlZSB7QGxpbmsgZGlzdGluY3RVbnRpbENoYW5nZWR9XG4gKiBAc2VlIHtAbGluayBkaXN0aW5jdFVudGlsS2V5Q2hhbmdlZH1cbiAqXG4gKiBAcGFyYW0ga2V5U2VsZWN0b3IgT3B0aW9uYWwgYGZ1bmN0aW9uYCB0byBzZWxlY3Qgd2hpY2ggdmFsdWUgeW91IHdhbnQgdG8gY2hlY2sgYXMgZGlzdGluY3QuXG4gKiBAcGFyYW0gZmx1c2hlcyBPcHRpb25hbCBgT2JzZXJ2YWJsZUlucHV0YCBmb3IgZmx1c2hpbmcgdGhlIGludGVybmFsIEhhc2hTZXQgb2YgdGhlIG9wZXJhdG9yLlxuICogQHJldHVybiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBPYnNlcnZhYmxlIHRoYXQgZW1pdHMgaXRlbXMgZnJvbSB0aGVcbiAqIHNvdXJjZSBPYnNlcnZhYmxlIHdpdGggZGlzdGluY3QgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGlzdGluY3Q8VCwgSz4oa2V5U2VsZWN0b3I/OiAodmFsdWU6IFQpID0+IEssIGZsdXNoZXM/OiBPYnNlcnZhYmxlSW5wdXQ8YW55Pik6IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbjxUPiB7XG4gIHJldHVybiBvcGVyYXRlKChzb3VyY2UsIHN1YnNjcmliZXIpID0+IHtcbiAgICBjb25zdCBkaXN0aW5jdEtleXMgPSBuZXcgU2V0KCk7XG4gICAgc291cmNlLnN1YnNjcmliZShcbiAgICAgIGNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlcihzdWJzY3JpYmVyLCAodmFsdWUpID0+IHtcbiAgICAgICAgY29uc3Qga2V5ID0ga2V5U2VsZWN0b3IgPyBrZXlTZWxlY3Rvcih2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgaWYgKCFkaXN0aW5jdEtleXMuaGFzKGtleSkpIHtcbiAgICAgICAgICBkaXN0aW5jdEtleXMuYWRkKGtleSk7XG4gICAgICAgICAgc3Vic2NyaWJlci5uZXh0KHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICApO1xuXG4gICAgZmx1c2hlcyAmJiBpbm5lckZyb20oZmx1c2hlcykuc3Vic2NyaWJlKGNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlcihzdWJzY3JpYmVyLCAoKSA9PiBkaXN0aW5jdEtleXMuY2xlYXIoKSwgbm9vcCkpO1xuICB9KTtcbn1cbiJdfQ==
