import{concat}from"../observable/concat";import{take}from"./take";import{ignoreElements}from"./ignoreElements";import{mapTo}from"./mapTo";import{mergeMap}from"./mergeMap";import{innerFrom}from"../observable/innerFrom";function delayWhen(o,r){return r?e=>concat(r.pipe(take(1),ignoreElements()),e.pipe(delayWhen(o))):mergeMap((e,r)=>innerFrom(o(e,r)).pipe(take(1),mapTo(e)))}export{delayWhen};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvZGVsYXlXaGVuLnRzIl0sIm5hbWVzIjpbImNvbmNhdCIsInRha2UiLCJpZ25vcmVFbGVtZW50cyIsIm1hcFRvIiwibWVyZ2VNYXAiLCJpbm5lckZyb20iLCJkZWxheVdoZW4iLCJkZWxheUR1cmF0aW9uU2VsZWN0b3IiLCJzdWJzY3JpcHRpb25EZWxheSIsInBpcGUiLCJzb3VyY2UiLCJ2YWx1ZSIsImluZGV4Il0sIm1hcHBpbmdzIjoiT0FFU0EsTUFBb0MsS0FBdEIsOEJBQ2RDLElBQW9CLEtBQVIsZ0JBQ1pDLGNBQXdDLEtBQWxCLDBCQUN0QkMsS0FBc0IsS0FBVCxpQkFDYkMsUUFBNEIsS0FBWixvQkFDaEJDLFNBQTBDLEtBQXpCLDBCQW9GcEIsU0FBVUMsVUFDZEMsRUFDQUMsR0FFQSxPQUFJQSxFQUVLLEdBQ0xSLE9BQU9RLEVBQWtCQyxLQUFLUixLQUFLLENBQUMsRUFBR0MsZUFBYyxDQUFFLEVBQUdRLEVBQU9ELEtBQUtILFVBQVVDLENBQXFCLENBQUMsQ0FBQyxFQUdwR0gsU0FBUyxDQUFDTyxFQUFPQyxJQUFVUCxVQUFVRSxFQUFzQkksRUFBT0MsQ0FBSyxDQUFDLEVBQUVILEtBQUtSLEtBQUssQ0FBQyxFQUFHRSxNQUFNUSxDQUFLLENBQUMsQ0FBQyxDQUM5RyxRQVhnQkwsU0FXaEIiLCJmaWxlIjoibm9kZV9tb2R1bGVzL3J4anMvc3JjL2ludGVybmFsL29wZXJhdG9ycy9kZWxheVdoZW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb24sIE9ic2VydmFibGVJbnB1dCB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IGNvbmNhdCB9IGZyb20gJy4uL29ic2VydmFibGUvY29uY2F0JztcbmltcG9ydCB7IHRha2UgfSBmcm9tICcuL3Rha2UnO1xuaW1wb3J0IHsgaWdub3JlRWxlbWVudHMgfSBmcm9tICcuL2lnbm9yZUVsZW1lbnRzJztcbmltcG9ydCB7IG1hcFRvIH0gZnJvbSAnLi9tYXBUbyc7XG5pbXBvcnQgeyBtZXJnZU1hcCB9IGZyb20gJy4vbWVyZ2VNYXAnO1xuaW1wb3J0IHsgaW5uZXJGcm9tIH0gZnJvbSAnLi4vb2JzZXJ2YWJsZS9pbm5lckZyb20nO1xuXG4vKiogQGRlcHJlY2F0ZWQgVGhlIGBzdWJzY3JpcHRpb25EZWxheWAgcGFyYW1ldGVyIHdpbGwgYmUgcmVtb3ZlZCBpbiB2OC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWxheVdoZW48VD4oXG4gIGRlbGF5RHVyYXRpb25TZWxlY3RvcjogKHZhbHVlOiBULCBpbmRleDogbnVtYmVyKSA9PiBPYnNlcnZhYmxlSW5wdXQ8YW55PixcbiAgc3Vic2NyaXB0aW9uRGVsYXk6IE9ic2VydmFibGU8YW55PlxuKTogTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uPFQ+O1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGF5V2hlbjxUPihkZWxheUR1cmF0aW9uU2VsZWN0b3I6ICh2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gT2JzZXJ2YWJsZUlucHV0PGFueT4pOiBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb248VD47XG5cbi8qKlxuICogRGVsYXlzIHRoZSBlbWlzc2lvbiBvZiBpdGVtcyBmcm9tIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSBieSBhIGdpdmVuIHRpbWUgc3BhblxuICogZGV0ZXJtaW5lZCBieSB0aGUgZW1pc3Npb25zIG9mIGFub3RoZXIgT2JzZXJ2YWJsZS5cbiAqXG4gKiA8c3BhbiBjbGFzcz1cImluZm9ybWFsXCI+SXQncyBsaWtlIHtAbGluayBkZWxheX0sIGJ1dCB0aGUgdGltZSBzcGFuIG9mIHRoZVxuICogZGVsYXkgZHVyYXRpb24gaXMgZGV0ZXJtaW5lZCBieSBhIHNlY29uZCBPYnNlcnZhYmxlLjwvc3Bhbj5cbiAqXG4gKiAhW10oZGVsYXlXaGVuLnBuZylcbiAqXG4gKiBgZGVsYXlXaGVuYCBvcGVyYXRvciBzaGlmdHMgZWFjaCBlbWl0dGVkIHZhbHVlIGZyb20gdGhlIHNvdXJjZSBPYnNlcnZhYmxlIGJ5XG4gKiBhIHRpbWUgc3BhbiBkZXRlcm1pbmVkIGJ5IGFub3RoZXIgT2JzZXJ2YWJsZS4gV2hlbiB0aGUgc291cmNlIGVtaXRzIGEgdmFsdWUsXG4gKiB0aGUgYGRlbGF5RHVyYXRpb25TZWxlY3RvcmAgZnVuY3Rpb24gaXMgY2FsbGVkIHdpdGggdGhlIHZhbHVlIGVtaXR0ZWQgZnJvbVxuICogdGhlIHNvdXJjZSBPYnNlcnZhYmxlIGFzIHRoZSBmaXJzdCBhcmd1bWVudCB0byB0aGUgYGRlbGF5RHVyYXRpb25TZWxlY3RvcmAuXG4gKiBUaGUgYGRlbGF5RHVyYXRpb25TZWxlY3RvcmAgZnVuY3Rpb24gc2hvdWxkIHJldHVybiBhbiB7QGxpbmsgT2JzZXJ2YWJsZUlucHV0fSxcbiAqIHRoYXQgaXMgaW50ZXJuYWxseSBjb252ZXJ0ZWQgdG8gYW4gT2JzZXJ2YWJsZSB0aGF0IGlzIGNhbGxlZCB0aGUgXCJkdXJhdGlvblwiXG4gKiBPYnNlcnZhYmxlLlxuICpcbiAqIFRoZSBzb3VyY2UgdmFsdWUgaXMgZW1pdHRlZCBvbiB0aGUgb3V0cHV0IE9ic2VydmFibGUgb25seSB3aGVuIHRoZSBcImR1cmF0aW9uXCJcbiAqIE9ic2VydmFibGUgZW1pdHMgKHtAbGluayBndWlkZS9nbG9zc2FyeS1hbmQtc2VtYW50aWNzI25leHQgbmV4dH1zKSBhbnkgdmFsdWUuXG4gKiBVcG9uIHRoYXQsIHRoZSBcImR1cmF0aW9uXCIgT2JzZXJ2YWJsZSBnZXRzIHVuc3Vic2NyaWJlZC5cbiAqXG4gKiBCZWZvcmUgUnhKUyBWNywgdGhlIHtAbGluayBndWlkZS9nbG9zc2FyeS1hbmQtc2VtYW50aWNzI2NvbXBsZXRlIGNvbXBsZXRpb259XG4gKiBvZiB0aGUgXCJkdXJhdGlvblwiIE9ic2VydmFibGUgd291bGQgaGF2ZSBiZWVuIHRyaWdnZXJpbmcgdGhlIGVtaXNzaW9uIG9mIHRoZVxuICogc291cmNlIHZhbHVlIHRvIHRoZSBvdXRwdXQgT2JzZXJ2YWJsZSwgYnV0IHdpdGggUnhKUyBWNywgdGhpcyBpcyBub3QgdGhlIGNhc2VcbiAqIGFueW1vcmUuXG4gKlxuICogT25seSBuZXh0IG5vdGlmaWNhdGlvbnMgKGZyb20gdGhlIFwiZHVyYXRpb25cIiBPYnNlcnZhYmxlKSB0cmlnZ2VyIHZhbHVlcyBmcm9tXG4gKiB0aGUgc291cmNlIE9ic2VydmFibGUgdG8gYmUgcGFzc2VkIHRvIHRoZSBvdXRwdXQgT2JzZXJ2YWJsZS4gSWYgdGhlIFwiZHVyYXRpb25cIlxuICogT2JzZXJ2YWJsZSBvbmx5IGVtaXRzIHRoZSBjb21wbGV0ZSBub3RpZmljYXRpb24gKHdpdGhvdXQgbmV4dCksIHRoZSB2YWx1ZVxuICogZW1pdHRlZCBieSB0aGUgc291cmNlIE9ic2VydmFibGUgd2lsbCBuZXZlciBnZXQgdG8gdGhlIG91dHB1dCBPYnNlcnZhYmxlIC0gaXRcbiAqIHdpbGwgYmUgc3dhbGxvd2VkLiBJZiB0aGUgXCJkdXJhdGlvblwiIE9ic2VydmFibGUgZXJyb3JzLCB0aGUgZXJyb3Igd2lsbCBiZVxuICogcHJvcGFnYXRlZCB0byB0aGUgb3V0cHV0IE9ic2VydmFibGUuXG4gKlxuICogT3B0aW9uYWxseSwgYGRlbGF5V2hlbmAgdGFrZXMgYSBzZWNvbmQgYXJndW1lbnQsIGBzdWJzY3JpcHRpb25EZWxheWAsIHdoaWNoXG4gKiBpcyBhbiBPYnNlcnZhYmxlLiBXaGVuIGBzdWJzY3JpcHRpb25EZWxheWAgZW1pdHMgaXRzIGZpcnN0IHZhbHVlIG9yXG4gKiBjb21wbGV0ZXMsIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSBpcyBzdWJzY3JpYmVkIHRvIGFuZCBzdGFydHMgYmVoYXZpbmcgbGlrZVxuICogZGVzY3JpYmVkIGluIHRoZSBwcmV2aW91cyBwYXJhZ3JhcGguIElmIGBzdWJzY3JpcHRpb25EZWxheWAgaXMgbm90IHByb3ZpZGVkLFxuICogYGRlbGF5V2hlbmAgd2lsbCBzdWJzY3JpYmUgdG8gdGhlIHNvdXJjZSBPYnNlcnZhYmxlIGFzIHNvb24gYXMgdGhlIG91dHB1dFxuICogT2JzZXJ2YWJsZSBpcyBzdWJzY3JpYmVkLlxuICpcbiAqICMjIEV4YW1wbGVcbiAqXG4gKiBEZWxheSBlYWNoIGNsaWNrIGJ5IGEgcmFuZG9tIGFtb3VudCBvZiB0aW1lLCBiZXR3ZWVuIDAgYW5kIDUgc2Vjb25kc1xuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBmcm9tRXZlbnQsIGRlbGF5V2hlbiwgaW50ZXJ2YWwgfSBmcm9tICdyeGpzJztcbiAqXG4gKiBjb25zdCBjbGlja3MgPSBmcm9tRXZlbnQoZG9jdW1lbnQsICdjbGljaycpO1xuICogY29uc3QgZGVsYXllZENsaWNrcyA9IGNsaWNrcy5waXBlKFxuICogICBkZWxheVdoZW4oKCkgPT4gaW50ZXJ2YWwoTWF0aC5yYW5kb20oKSAqIDUwMDApKVxuICogKTtcbiAqIGRlbGF5ZWRDbGlja3Muc3Vic2NyaWJlKHggPT4gY29uc29sZS5sb2coeCkpO1xuICogYGBgXG4gKlxuICogQHNlZSB7QGxpbmsgZGVsYXl9XG4gKiBAc2VlIHtAbGluayB0aHJvdHRsZX1cbiAqIEBzZWUge0BsaW5rIHRocm90dGxlVGltZX1cbiAqIEBzZWUge0BsaW5rIGRlYm91bmNlfVxuICogQHNlZSB7QGxpbmsgZGVib3VuY2VUaW1lfVxuICogQHNlZSB7QGxpbmsgc2FtcGxlfVxuICogQHNlZSB7QGxpbmsgc2FtcGxlVGltZX1cbiAqIEBzZWUge0BsaW5rIGF1ZGl0fVxuICogQHNlZSB7QGxpbmsgYXVkaXRUaW1lfVxuICpcbiAqIEBwYXJhbSBkZWxheUR1cmF0aW9uU2VsZWN0b3IgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gYE9ic2VydmFibGVJbnB1dGAgZm9yXG4gKiBlYWNoIGB2YWx1ZWAgZW1pdHRlZCBieSB0aGUgc291cmNlIE9ic2VydmFibGUsIHdoaWNoIGlzIHRoZW4gdXNlZCB0byBkZWxheSB0aGVcbiAqIGVtaXNzaW9uIG9mIHRoYXQgYHZhbHVlYCBvbiB0aGUgb3V0cHV0IE9ic2VydmFibGUgdW50aWwgdGhlIGBPYnNlcnZhYmxlSW5wdXRgXG4gKiByZXR1cm5lZCBmcm9tIHRoaXMgZnVuY3Rpb24gZW1pdHMgYSBuZXh0IHZhbHVlLiBXaGVuIGNhbGxlZCwgYmVzaWRlIGB2YWx1ZWAsXG4gKiB0aGlzIGZ1bmN0aW9uIHJlY2VpdmVzIGEgemVyby1iYXNlZCBgaW5kZXhgIG9mIHRoZSBlbWlzc2lvbiBvcmRlci5cbiAqIEBwYXJhbSBzdWJzY3JpcHRpb25EZWxheSBBbiBPYnNlcnZhYmxlIHRoYXQgdHJpZ2dlcnMgdGhlIHN1YnNjcmlwdGlvbiB0byB0aGVcbiAqIHNvdXJjZSBPYnNlcnZhYmxlIG9uY2UgaXQgZW1pdHMgYW55IHZhbHVlLlxuICogQHJldHVybiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBPYnNlcnZhYmxlIHRoYXQgZGVsYXlzIHRoZSBlbWlzc2lvbnMgb2ZcbiAqIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSBieSBhbiBhbW91bnQgb2YgdGltZSBzcGVjaWZpZWQgYnkgdGhlIE9ic2VydmFibGVcbiAqIHJldHVybmVkIGJ5IGBkZWxheUR1cmF0aW9uU2VsZWN0b3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsYXlXaGVuPFQ+KFxuICBkZWxheUR1cmF0aW9uU2VsZWN0b3I6ICh2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gT2JzZXJ2YWJsZUlucHV0PGFueT4sXG4gIHN1YnNjcmlwdGlvbkRlbGF5PzogT2JzZXJ2YWJsZTxhbnk+XG4pOiBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb248VD4ge1xuICBpZiAoc3Vic2NyaXB0aW9uRGVsYXkpIHtcbiAgICAvLyBERVBSRUNBVEVEIFBBVEhcbiAgICByZXR1cm4gKHNvdXJjZTogT2JzZXJ2YWJsZTxUPikgPT5cbiAgICAgIGNvbmNhdChzdWJzY3JpcHRpb25EZWxheS5waXBlKHRha2UoMSksIGlnbm9yZUVsZW1lbnRzKCkpLCBzb3VyY2UucGlwZShkZWxheVdoZW4oZGVsYXlEdXJhdGlvblNlbGVjdG9yKSkpO1xuICB9XG5cbiAgcmV0dXJuIG1lcmdlTWFwKCh2YWx1ZSwgaW5kZXgpID0+IGlubmVyRnJvbShkZWxheUR1cmF0aW9uU2VsZWN0b3IodmFsdWUsIGluZGV4KSkucGlwZSh0YWtlKDEpLCBtYXBUbyh2YWx1ZSkpKTtcbn1cbiJdfQ==
