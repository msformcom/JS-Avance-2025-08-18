import{asyncScheduler}from"../scheduler/async";import{operate}from"../util/lift";import{createOperatorSubscriber}from"./OperatorSubscriber";function debounceTime(t,i=asyncScheduler){return operate((e,u)=>{let l=null,r=null,o=null,c=()=>{var e;l&&(l.unsubscribe(),l=null,e=r,r=null,u.next(e))};function n(){var e=o+t,r=i.now();r<e?(l=this.schedule(void 0,e-r),u.add(l)):c()}e.subscribe(createOperatorSubscriber(u,e=>{r=e,o=i.now(),l||(l=i.schedule(n,t),u.add(l))},()=>{c(),u.complete()},void 0,()=>{r=l=null}))})}export{debounceTime};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvZGVib3VuY2VUaW1lLnRzIl0sIm5hbWVzIjpbImFzeW5jU2NoZWR1bGVyIiwib3BlcmF0ZSIsImNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlciIsImRlYm91bmNlVGltZSIsImR1ZVRpbWUiLCJzY2hlZHVsZXIiLCJzb3VyY2UiLCJzdWJzY3JpYmVyIiwibGV0IiwiYWN0aXZlVGFzayIsImxhc3RWYWx1ZSIsImxhc3RUaW1lIiwiZW1pdCIsInZhbHVlIiwidW5zdWJzY3JpYmUiLCJuZXh0IiwiZW1pdFdoZW5JZGxlIiwidGFyZ2V0VGltZSIsIm5vdyIsInRoaXMiLCJzY2hlZHVsZSIsInVuZGVmaW5lZCIsImFkZCIsInN1YnNjcmliZSIsImNvbXBsZXRlIl0sIm1hcHBpbmdzIjoiT0FBU0EsY0FBMEMsS0FBcEIsNEJBR3RCQyxPQUE2QixLQUFkLHNCQUNmQyx3QkFBc0QsS0FBdEIsdUJBMERuQyxTQUFVQyxhQUFnQkMsRUFBaUJDLEVBQTJCTCxnQkFDMUUsT0FBT0MsUUFBUSxDQUFDSyxFQUFRQyxLQUN0QkMsSUFBSUMsRUFBa0MsS0FDbENDLEVBQXNCLEtBQ3RCQyxFQUEwQixLQUV4QkMsRUFBTyxLQUNYLElBSVFDLEVBSkpKLElBRUZBLEVBQVdLLFlBQVcsRUFDdEJMLEVBQWEsS0FDUEksRUFBUUgsRUFDZEEsRUFBWSxLQUNaSCxFQUFXUSxLQUFLRixDQUFLLEVBRXpCLEVBQ0EsU0FBU0csSUFJUCxJQUFNQyxFQUFhTixFQUFZUCxFQUN6QmMsRUFBTWIsRUFBVWEsSUFBRyxFQUNyQkEsRUFBTUQsR0FFUlIsRUFBYVUsS0FBS0MsU0FBU0MsS0FBQUEsRUFBV0osRUFBYUMsQ0FBRyxFQUN0RFgsRUFBV2UsSUFBSWIsQ0FBVSxHQUkzQkcsRUFBSSxDQUNOLENBRUFOLEVBQU9pQixVQUNMckIseUJBQ0VLLEVBQ0EsSUFDRUcsRUFBWUcsRUFDWkYsRUFBV04sRUFBVWEsSUFBRyxFQUduQlQsSUFDSEEsRUFBYUosRUFBVWUsU0FBU0osRUFBY1osQ0FBTyxFQUNyREcsRUFBV2UsSUFBSWIsQ0FBVSxFQUU3QixFQUNBLEtBR0VHLEVBQUksRUFDSkwsRUFBV2lCLFNBQVEsQ0FDckIsRUFFQUgsS0FBQUEsRUFDQSxLQUVFWCxFQUFZRCxFQUFhLElBQzNCLENBQUMsQ0FDRixDQUVMLENBQUMsQ0FDSCxRQTVEZ0JOLFlBNERoQiIsImZpbGUiOiJub2RlX21vZHVsZXMvcnhqcy9zcmMvaW50ZXJuYWwvb3BlcmF0b3JzL2RlYm91bmNlVGltZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzeW5jU2NoZWR1bGVyIH0gZnJvbSAnLi4vc2NoZWR1bGVyL2FzeW5jJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJy4uL1N1YnNjcmlwdGlvbic7XG5pbXBvcnQgeyBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb24sIFNjaGVkdWxlckFjdGlvbiwgU2NoZWR1bGVyTGlrZSB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IG9wZXJhdGUgfSBmcm9tICcuLi91dGlsL2xpZnQnO1xuaW1wb3J0IHsgY3JlYXRlT3BlcmF0b3JTdWJzY3JpYmVyIH0gZnJvbSAnLi9PcGVyYXRvclN1YnNjcmliZXInO1xuXG4vKipcbiAqIEVtaXRzIGEgbm90aWZpY2F0aW9uIGZyb20gdGhlIHNvdXJjZSBPYnNlcnZhYmxlIG9ubHkgYWZ0ZXIgYSBwYXJ0aWN1bGFyIHRpbWUgc3BhblxuICogaGFzIHBhc3NlZCB3aXRob3V0IGFub3RoZXIgc291cmNlIGVtaXNzaW9uLlxuICpcbiAqIDxzcGFuIGNsYXNzPVwiaW5mb3JtYWxcIj5JdCdzIGxpa2Uge0BsaW5rIGRlbGF5fSwgYnV0IHBhc3NlcyBvbmx5IHRoZSBtb3N0XG4gKiByZWNlbnQgbm90aWZpY2F0aW9uIGZyb20gZWFjaCBidXJzdCBvZiBlbWlzc2lvbnMuPC9zcGFuPlxuICpcbiAqICFbXShkZWJvdW5jZVRpbWUucG5nKVxuICpcbiAqIGBkZWJvdW5jZVRpbWVgIGRlbGF5cyBub3RpZmljYXRpb25zIGVtaXR0ZWQgYnkgdGhlIHNvdXJjZSBPYnNlcnZhYmxlLCBidXQgZHJvcHNcbiAqIHByZXZpb3VzIHBlbmRpbmcgZGVsYXllZCBlbWlzc2lvbnMgaWYgYSBuZXcgbm90aWZpY2F0aW9uIGFycml2ZXMgb24gdGhlIHNvdXJjZVxuICogT2JzZXJ2YWJsZS4gVGhpcyBvcGVyYXRvciBrZWVwcyB0cmFjayBvZiB0aGUgbW9zdCByZWNlbnQgbm90aWZpY2F0aW9uIGZyb20gdGhlXG4gKiBzb3VyY2UgT2JzZXJ2YWJsZSwgYW5kIGVtaXRzIHRoYXQgb25seSB3aGVuIGBkdWVUaW1lYCBoYXMgcGFzc2VkXG4gKiB3aXRob3V0IGFueSBvdGhlciBub3RpZmljYXRpb24gYXBwZWFyaW5nIG9uIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZS4gSWYgYSBuZXcgdmFsdWVcbiAqIGFwcGVhcnMgYmVmb3JlIGBkdWVUaW1lYCBzaWxlbmNlIG9jY3VycywgdGhlIHByZXZpb3VzIG5vdGlmaWNhdGlvbiB3aWxsIGJlIGRyb3BwZWRcbiAqIGFuZCB3aWxsIG5vdCBiZSBlbWl0dGVkIGFuZCBhIG5ldyBgZHVlVGltZWAgaXMgc2NoZWR1bGVkLlxuICogSWYgdGhlIGNvbXBsZXRpbmcgZXZlbnQgaGFwcGVucyBkdXJpbmcgYGR1ZVRpbWVgIHRoZSBsYXN0IGNhY2hlZCBub3RpZmljYXRpb25cbiAqIGlzIGVtaXR0ZWQgYmVmb3JlIHRoZSBjb21wbGV0aW9uIGV2ZW50IGlzIGZvcndhcmRlZCB0byB0aGUgb3V0cHV0IG9ic2VydmFibGUuXG4gKiBJZiB0aGUgZXJyb3IgZXZlbnQgaGFwcGVucyBkdXJpbmcgYGR1ZVRpbWVgIG9yIGFmdGVyIGl0IG9ubHkgdGhlIGVycm9yIGV2ZW50IGlzXG4gKiBmb3J3YXJkZWQgdG8gdGhlIG91dHB1dCBvYnNlcnZhYmxlLiBUaGUgY2FjaGUgbm90aWZpY2F0aW9uIGlzIG5vdCBlbWl0dGVkIGluIHRoaXMgY2FzZS5cbiAqXG4gKiBUaGlzIGlzIGEgcmF0ZS1saW1pdGluZyBvcGVyYXRvciwgYmVjYXVzZSBpdCBpcyBpbXBvc3NpYmxlIGZvciBtb3JlIHRoYW4gb25lXG4gKiBub3RpZmljYXRpb24gdG8gYmUgZW1pdHRlZCBpbiBhbnkgdGltZSB3aW5kb3cgb2YgZHVyYXRpb24gYGR1ZVRpbWVgLCBidXQgaXQgaXMgYWxzb1xuICogYSBkZWxheS1saWtlIG9wZXJhdG9yIHNpbmNlIG91dHB1dCBlbWlzc2lvbnMgZG8gbm90IG9jY3VyIGF0IHRoZSBzYW1lIHRpbWUgYXNcbiAqIHRoZXkgZGlkIG9uIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZS4gT3B0aW9uYWxseSB0YWtlcyBhIHtAbGluayBTY2hlZHVsZXJMaWtlfSBmb3JcbiAqIG1hbmFnaW5nIHRpbWVycy5cbiAqXG4gKiAjIyBFeGFtcGxlXG4gKlxuICogRW1pdCB0aGUgbW9zdCByZWNlbnQgY2xpY2sgYWZ0ZXIgYSBidXJzdCBvZiBjbGlja3NcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZnJvbUV2ZW50LCBkZWJvdW5jZVRpbWUgfSBmcm9tICdyeGpzJztcbiAqXG4gKiBjb25zdCBjbGlja3MgPSBmcm9tRXZlbnQoZG9jdW1lbnQsICdjbGljaycpO1xuICogY29uc3QgcmVzdWx0ID0gY2xpY2tzLnBpcGUoZGVib3VuY2VUaW1lKDEwMDApKTtcbiAqIHJlc3VsdC5zdWJzY3JpYmUoeCA9PiBjb25zb2xlLmxvZyh4KSk7XG4gKiBgYGBcbiAqXG4gKiBAc2VlIHtAbGluayBhdWRpdH1cbiAqIEBzZWUge0BsaW5rIGF1ZGl0VGltZX1cbiAqIEBzZWUge0BsaW5rIGRlYm91bmNlfVxuICogQHNlZSB7QGxpbmsgc2FtcGxlfVxuICogQHNlZSB7QGxpbmsgc2FtcGxlVGltZX1cbiAqIEBzZWUge0BsaW5rIHRocm90dGxlfVxuICogQHNlZSB7QGxpbmsgdGhyb3R0bGVUaW1lfVxuICpcbiAqIEBwYXJhbSBkdWVUaW1lIFRoZSB0aW1lb3V0IGR1cmF0aW9uIGluIG1pbGxpc2Vjb25kcyAob3IgdGhlIHRpbWUgdW5pdCBkZXRlcm1pbmVkXG4gKiBpbnRlcm5hbGx5IGJ5IHRoZSBvcHRpb25hbCBgc2NoZWR1bGVyYCkgZm9yIHRoZSB3aW5kb3cgb2YgdGltZSByZXF1aXJlZCB0byB3YWl0XG4gKiBmb3IgZW1pc3Npb24gc2lsZW5jZSBiZWZvcmUgZW1pdHRpbmcgdGhlIG1vc3QgcmVjZW50IHNvdXJjZSB2YWx1ZS5cbiAqIEBwYXJhbSBzY2hlZHVsZXIgVGhlIHtAbGluayBTY2hlZHVsZXJMaWtlfSB0byB1c2UgZm9yIG1hbmFnaW5nIHRoZSB0aW1lcnMgdGhhdFxuICogaGFuZGxlIHRoZSB0aW1lb3V0IGZvciBlYWNoIHZhbHVlLlxuICogQHJldHVybiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBPYnNlcnZhYmxlIHRoYXQgZGVsYXlzIHRoZSBlbWlzc2lvbnMgb2ZcbiAqIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSBieSB0aGUgc3BlY2lmaWVkIGBkdWVUaW1lYCwgYW5kIG1heSBkcm9wIHNvbWUgdmFsdWVzXG4gKiBpZiB0aGV5IG9jY3VyIHRvbyBmcmVxdWVudGx5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVib3VuY2VUaW1lPFQ+KGR1ZVRpbWU6IG51bWJlciwgc2NoZWR1bGVyOiBTY2hlZHVsZXJMaWtlID0gYXN5bmNTY2hlZHVsZXIpOiBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb248VD4ge1xuICByZXR1cm4gb3BlcmF0ZSgoc291cmNlLCBzdWJzY3JpYmVyKSA9PiB7XG4gICAgbGV0IGFjdGl2ZVRhc2s6IFN1YnNjcmlwdGlvbiB8IG51bGwgPSBudWxsO1xuICAgIGxldCBsYXN0VmFsdWU6IFQgfCBudWxsID0gbnVsbDtcbiAgICBsZXQgbGFzdFRpbWU6IG51bWJlciB8IG51bGwgPSBudWxsO1xuXG4gICAgY29uc3QgZW1pdCA9ICgpID0+IHtcbiAgICAgIGlmIChhY3RpdmVUYXNrKSB7XG4gICAgICAgIC8vIFdlIGhhdmUgYSB2YWx1ZSEgRnJlZSB1cCBtZW1vcnkgZmlyc3QsIHRoZW4gZW1pdCB0aGUgdmFsdWUuXG4gICAgICAgIGFjdGl2ZVRhc2sudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgYWN0aXZlVGFzayA9IG51bGw7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gbGFzdFZhbHVlITtcbiAgICAgICAgbGFzdFZhbHVlID0gbnVsbDtcbiAgICAgICAgc3Vic2NyaWJlci5uZXh0KHZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGZ1bmN0aW9uIGVtaXRXaGVuSWRsZSh0aGlzOiBTY2hlZHVsZXJBY3Rpb248dW5rbm93bj4pIHtcbiAgICAgIC8vIFRoaXMgaXMgY2FsbGVkIGBkdWVUaW1lYCBhZnRlciB0aGUgZmlyc3QgdmFsdWVcbiAgICAgIC8vIGJ1dCB3ZSBtaWdodCBoYXZlIHJlY2VpdmVkIG5ldyB2YWx1ZXMgZHVyaW5nIHRoaXMgd2luZG93IVxuXG4gICAgICBjb25zdCB0YXJnZXRUaW1lID0gbGFzdFRpbWUhICsgZHVlVGltZTtcbiAgICAgIGNvbnN0IG5vdyA9IHNjaGVkdWxlci5ub3coKTtcbiAgICAgIGlmIChub3cgPCB0YXJnZXRUaW1lKSB7XG4gICAgICAgIC8vIE9uIHRoYXQgY2FzZSwgcmUtc2NoZWR1bGUgdG8gdGhlIG5ldyB0YXJnZXRcbiAgICAgICAgYWN0aXZlVGFzayA9IHRoaXMuc2NoZWR1bGUodW5kZWZpbmVkLCB0YXJnZXRUaW1lIC0gbm93KTtcbiAgICAgICAgc3Vic2NyaWJlci5hZGQoYWN0aXZlVGFzayk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZW1pdCgpO1xuICAgIH1cblxuICAgIHNvdXJjZS5zdWJzY3JpYmUoXG4gICAgICBjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIoXG4gICAgICAgIHN1YnNjcmliZXIsXG4gICAgICAgICh2YWx1ZTogVCkgPT4ge1xuICAgICAgICAgIGxhc3RWYWx1ZSA9IHZhbHVlO1xuICAgICAgICAgIGxhc3RUaW1lID0gc2NoZWR1bGVyLm5vdygpO1xuXG4gICAgICAgICAgLy8gT25seSBzZXQgdXAgYSB0YXNrIGlmIGl0J3Mgbm90IGFscmVhZHkgdXBcbiAgICAgICAgICBpZiAoIWFjdGl2ZVRhc2spIHtcbiAgICAgICAgICAgIGFjdGl2ZVRhc2sgPSBzY2hlZHVsZXIuc2NoZWR1bGUoZW1pdFdoZW5JZGxlLCBkdWVUaW1lKTtcbiAgICAgICAgICAgIHN1YnNjcmliZXIuYWRkKGFjdGl2ZVRhc2spO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgKCkgPT4ge1xuICAgICAgICAgIC8vIFNvdXJjZSBjb21wbGV0ZWQuXG4gICAgICAgICAgLy8gRW1pdCBhbnkgcGVuZGluZyBkZWJvdW5jZWQgdmFsdWVzIHRoZW4gY29tcGxldGVcbiAgICAgICAgICBlbWl0KCk7XG4gICAgICAgICAgc3Vic2NyaWJlci5jb21wbGV0ZSgpO1xuICAgICAgICB9LFxuICAgICAgICAvLyBQYXNzIGFsbCBlcnJvcnMgdGhyb3VnaCB0byBjb25zdW1lci5cbiAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgLy8gRmluYWxpemF0aW9uLlxuICAgICAgICAgIGxhc3RWYWx1ZSA9IGFjdGl2ZVRhc2sgPSBudWxsO1xuICAgICAgICB9XG4gICAgICApXG4gICAgKTtcbiAgfSk7XG59XG4iXX0=
