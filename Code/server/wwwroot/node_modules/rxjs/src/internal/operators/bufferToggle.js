import{Subscription}from"../Subscription";import{operate}from"../util/lift";import{innerFrom}from"../observable/innerFrom";import{createOperatorSubscriber}from"./OperatorSubscriber";import{noop}from"../util/noop";import{arrRemove}from"../util/arrRemove";function bufferToggle(e,b){return operate((r,t)=>{let i=[];innerFrom(e).subscribe(createOperatorSubscriber(t,r=>{let e=[],o=(i.push(e),new Subscription);o.add(innerFrom(b(r)).subscribe(createOperatorSubscriber(t,()=>{arrRemove(i,e),t.next(e),o.unsubscribe()},noop)))},noop)),r.subscribe(createOperatorSubscriber(t,r=>{for(var e of i)e.push(r)},()=>{for(;0<i.length;)t.next(i.shift());t.complete()}))})}export{bufferToggle};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvYnVmZmVyVG9nZ2xlLnRzIl0sIm5hbWVzIjpbIlN1YnNjcmlwdGlvbiIsIm9wZXJhdGUiLCJpbm5lckZyb20iLCJjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIiLCJub29wIiwiYXJyUmVtb3ZlIiwiYnVmZmVyVG9nZ2xlIiwib3BlbmluZ3MiLCJjbG9zaW5nU2VsZWN0b3IiLCJzb3VyY2UiLCJzdWJzY3JpYmVyIiwiYnVmZmVycyIsInN1YnNjcmliZSIsImJ1ZmZlciIsImNsb3NpbmdTdWJzY3JpcHRpb24iLCJwdXNoIiwiYWRkIiwib3BlblZhbHVlIiwibmV4dCIsInVuc3Vic2NyaWJlIiwidmFsdWUiLCJsZW5ndGgiLCJzaGlmdCIsImNvbXBsZXRlIl0sIm1hcHBpbmdzIjoiT0FBU0EsWUFBcUMsS0FBakIseUJBRXBCQyxPQUE2QixLQUFkLHNCQUNmQyxTQUEwQyxLQUF6QixpQ0FDakJDLHdCQUFzRCxLQUF0Qiw4QkFDaENDLElBQTBCLEtBQWQsc0JBQ1pDLFNBQW9DLEtBQW5CLG9CQTZDcEIsU0FBVUMsYUFDZEMsRUFDQUMsR0FFQSxPQUFPUCxRQUFRLENBQUNRLEVBQVFDLEtBQ3RCLElBQU1DLEVBQWlCLEdBR3ZCVCxVQUFVSyxDQUFRLEVBQUVLLFVBQ2xCVCx5QkFDRU8sRUFDQSxJQUNFLElBQU1HLEVBQWMsR0FJZEMsR0FITkgsRUFBUUksS0FBS0YsQ0FBTSxFQUdTLElBQUliLGNBU2hDYyxFQUFvQkUsSUFBSWQsVUFBVU0sRUFBZ0JTLENBQVMsQ0FBQyxFQUFFTCxVQUFVVCx5QkFBeUJPLEVBUDlFLEtBQ2pCTCxVQUFVTSxFQUFTRSxDQUFNLEVBQ3pCSCxFQUFXUSxLQUFLTCxDQUFNLEVBQ3RCQyxFQUFvQkssWUFBVyxDQUNqQyxFQUd5SGYsSUFBSSxDQUFDLENBQUMsQ0FDakksRUFDQUEsSUFBSSxDQUNMLEVBR0hLLEVBQU9HLFVBQ0xULHlCQUNFTyxFQUNBLElBRUUsSUFBSyxJQUFNRyxLQUFVRixFQUNuQkUsRUFBT0UsS0FBS0ssQ0FBSyxDQUVyQixFQUNBLEtBRUUsS0FBd0IsRUFBakJULEVBQVFVLFFBQ2JYLEVBQVdRLEtBQUtQLEVBQVFXLE1BQUssQ0FBRyxFQUVsQ1osRUFBV2EsU0FBUSxDQUNyQixDQUFDLENBQ0YsQ0FFTCxDQUFDLENBQ0gsUUFsRGdCakIsWUFrRGhCIiwiZmlsZSI6Im5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvYnVmZmVyVG9nZ2xlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAnLi4vU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IE9wZXJhdG9yRnVuY3Rpb24sIE9ic2VydmFibGVJbnB1dCB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IG9wZXJhdGUgfSBmcm9tICcuLi91dGlsL2xpZnQnO1xuaW1wb3J0IHsgaW5uZXJGcm9tIH0gZnJvbSAnLi4vb2JzZXJ2YWJsZS9pbm5lckZyb20nO1xuaW1wb3J0IHsgY3JlYXRlT3BlcmF0b3JTdWJzY3JpYmVyIH0gZnJvbSAnLi9PcGVyYXRvclN1YnNjcmliZXInO1xuaW1wb3J0IHsgbm9vcCB9IGZyb20gJy4uL3V0aWwvbm9vcCc7XG5pbXBvcnQgeyBhcnJSZW1vdmUgfSBmcm9tICcuLi91dGlsL2FyclJlbW92ZSc7XG5cbi8qKlxuICogQnVmZmVycyB0aGUgc291cmNlIE9ic2VydmFibGUgdmFsdWVzIHN0YXJ0aW5nIGZyb20gYW4gZW1pc3Npb24gZnJvbVxuICogYG9wZW5pbmdzYCBhbmQgZW5kaW5nIHdoZW4gdGhlIG91dHB1dCBvZiBgY2xvc2luZ1NlbGVjdG9yYCBlbWl0cy5cbiAqXG4gKiA8c3BhbiBjbGFzcz1cImluZm9ybWFsXCI+Q29sbGVjdHMgdmFsdWVzIGZyb20gdGhlIHBhc3QgYXMgYW4gYXJyYXkuIFN0YXJ0c1xuICogY29sbGVjdGluZyBvbmx5IHdoZW4gYG9wZW5pbmdgIGVtaXRzLCBhbmQgY2FsbHMgdGhlIGBjbG9zaW5nU2VsZWN0b3JgXG4gKiBmdW5jdGlvbiB0byBnZXQgYW4gT2JzZXJ2YWJsZSB0aGF0IHRlbGxzIHdoZW4gdG8gY2xvc2UgdGhlIGJ1ZmZlci48L3NwYW4+XG4gKlxuICogIVtdKGJ1ZmZlclRvZ2dsZS5wbmcpXG4gKlxuICogQnVmZmVycyB2YWx1ZXMgZnJvbSB0aGUgc291cmNlIGJ5IG9wZW5pbmcgdGhlIGJ1ZmZlciB2aWEgc2lnbmFscyBmcm9tIGFuXG4gKiBPYnNlcnZhYmxlIHByb3ZpZGVkIHRvIGBvcGVuaW5nc2AsIGFuZCBjbG9zaW5nIGFuZCBzZW5kaW5nIHRoZSBidWZmZXJzIHdoZW5cbiAqIGEgU3Vic2NyaWJhYmxlIG9yIFByb21pc2UgcmV0dXJuZWQgYnkgdGhlIGBjbG9zaW5nU2VsZWN0b3JgIGZ1bmN0aW9uIGVtaXRzLlxuICpcbiAqICMjIEV4YW1wbGVcbiAqXG4gKiBFdmVyeSBvdGhlciBzZWNvbmQsIGVtaXQgdGhlIGNsaWNrIGV2ZW50cyBmcm9tIHRoZSBuZXh0IDUwMG1zXG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IGZyb21FdmVudCwgaW50ZXJ2YWwsIGJ1ZmZlclRvZ2dsZSwgRU1QVFkgfSBmcm9tICdyeGpzJztcbiAqXG4gKiBjb25zdCBjbGlja3MgPSBmcm9tRXZlbnQoZG9jdW1lbnQsICdjbGljaycpO1xuICogY29uc3Qgb3BlbmluZ3MgPSBpbnRlcnZhbCgxMDAwKTtcbiAqIGNvbnN0IGJ1ZmZlcmVkID0gY2xpY2tzLnBpcGUoYnVmZmVyVG9nZ2xlKG9wZW5pbmdzLCBpID0+XG4gKiAgIGkgJSAyID8gaW50ZXJ2YWwoNTAwKSA6IEVNUFRZXG4gKiApKTtcbiAqIGJ1ZmZlcmVkLnN1YnNjcmliZSh4ID0+IGNvbnNvbGUubG9nKHgpKTtcbiAqIGBgYFxuICpcbiAqIEBzZWUge0BsaW5rIGJ1ZmZlcn1cbiAqIEBzZWUge0BsaW5rIGJ1ZmZlckNvdW50fVxuICogQHNlZSB7QGxpbmsgYnVmZmVyVGltZX1cbiAqIEBzZWUge0BsaW5rIGJ1ZmZlcldoZW59XG4gKiBAc2VlIHtAbGluayB3aW5kb3dUb2dnbGV9XG4gKlxuICogQHBhcmFtIG9wZW5pbmdzIEEgU3Vic2NyaWJhYmxlIG9yIFByb21pc2Ugb2Ygbm90aWZpY2F0aW9ucyB0byBzdGFydCBuZXdcbiAqIGJ1ZmZlcnMuXG4gKiBAcGFyYW0gY2xvc2luZ1NlbGVjdG9yIEEgZnVuY3Rpb24gdGhhdCB0YWtlc1xuICogdGhlIHZhbHVlIGVtaXR0ZWQgYnkgdGhlIGBvcGVuaW5nc2Agb2JzZXJ2YWJsZSBhbmQgcmV0dXJucyBhIFN1YnNjcmliYWJsZSBvciBQcm9taXNlLFxuICogd2hpY2gsIHdoZW4gaXQgZW1pdHMsIHNpZ25hbHMgdGhhdCB0aGUgYXNzb2NpYXRlZCBidWZmZXIgc2hvdWxkIGJlIGVtaXR0ZWRcbiAqIGFuZCBjbGVhcmVkLlxuICogQHJldHVybiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBPYnNlcnZhYmxlIG9mIGFycmF5cyBvZiBidWZmZXJlZCB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBidWZmZXJUb2dnbGU8VCwgTz4oXG4gIG9wZW5pbmdzOiBPYnNlcnZhYmxlSW5wdXQ8Tz4sXG4gIGNsb3NpbmdTZWxlY3RvcjogKHZhbHVlOiBPKSA9PiBPYnNlcnZhYmxlSW5wdXQ8YW55PlxuKTogT3BlcmF0b3JGdW5jdGlvbjxULCBUW10+IHtcbiAgcmV0dXJuIG9wZXJhdGUoKHNvdXJjZSwgc3Vic2NyaWJlcikgPT4ge1xuICAgIGNvbnN0IGJ1ZmZlcnM6IFRbXVtdID0gW107XG5cbiAgICAvLyBTdWJzY3JpYmUgdG8gdGhlIG9wZW5pbmdzIG5vdGlmaWVyIGZpcnN0XG4gICAgaW5uZXJGcm9tKG9wZW5pbmdzKS5zdWJzY3JpYmUoXG4gICAgICBjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIoXG4gICAgICAgIHN1YnNjcmliZXIsXG4gICAgICAgIChvcGVuVmFsdWUpID0+IHtcbiAgICAgICAgICBjb25zdCBidWZmZXI6IFRbXSA9IFtdO1xuICAgICAgICAgIGJ1ZmZlcnMucHVzaChidWZmZXIpO1xuICAgICAgICAgIC8vIFdlIHVzZSB0aGlzIGNvbXBvc2l0ZSBzdWJzY3JpcHRpb24sIHNvIHRoYXRcbiAgICAgICAgICAvLyB3aGVuIHRoZSBjbG9zaW5nIG5vdGlmaWVyIGVtaXRzLCB3ZSBjYW4gdGVhciBpdCBkb3duLlxuICAgICAgICAgIGNvbnN0IGNsb3NpbmdTdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG5cbiAgICAgICAgICBjb25zdCBlbWl0QnVmZmVyID0gKCkgPT4ge1xuICAgICAgICAgICAgYXJyUmVtb3ZlKGJ1ZmZlcnMsIGJ1ZmZlcik7XG4gICAgICAgICAgICBzdWJzY3JpYmVyLm5leHQoYnVmZmVyKTtcbiAgICAgICAgICAgIGNsb3NpbmdTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgLy8gVGhlIGxpbmUgYmVsb3cgd2lsbCBhZGQgdGhlIHN1YnNjcmlwdGlvbiB0byB0aGUgcGFyZW50IHN1YnNjcmliZXIgKmFuZCogdGhlIGNsb3Npbmcgc3Vic2NyaXB0aW9uLlxuICAgICAgICAgIGNsb3NpbmdTdWJzY3JpcHRpb24uYWRkKGlubmVyRnJvbShjbG9zaW5nU2VsZWN0b3Iob3BlblZhbHVlKSkuc3Vic2NyaWJlKGNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlcihzdWJzY3JpYmVyLCBlbWl0QnVmZmVyLCBub29wKSkpO1xuICAgICAgICB9LFxuICAgICAgICBub29wXG4gICAgICApXG4gICAgKTtcblxuICAgIHNvdXJjZS5zdWJzY3JpYmUoXG4gICAgICBjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIoXG4gICAgICAgIHN1YnNjcmliZXIsXG4gICAgICAgICh2YWx1ZSkgPT4ge1xuICAgICAgICAgIC8vIFZhbHVlIGZyb20gb3VyIHNvdXJjZS4gQWRkIGl0IHRvIGFsbCBwZW5kaW5nIGJ1ZmZlcnMuXG4gICAgICAgICAgZm9yIChjb25zdCBidWZmZXIgb2YgYnVmZmVycykge1xuICAgICAgICAgICAgYnVmZmVyLnB1c2godmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgKCkgPT4ge1xuICAgICAgICAgIC8vIFNvdXJjZSBjb21wbGV0ZS4gRW1pdCBhbGwgcGVuZGluZyBidWZmZXJzLlxuICAgICAgICAgIHdoaWxlIChidWZmZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHN1YnNjcmliZXIubmV4dChidWZmZXJzLnNoaWZ0KCkhKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgc3Vic2NyaWJlci5jb21wbGV0ZSgpO1xuICAgICAgICB9XG4gICAgICApXG4gICAgKTtcbiAgfSk7XG59XG4iXX0=
